{"version":3,"sources":["test.js"],"names":["$","jQuery","$console","console_log","string","is","append","$list","find","scrollTop","height","instance","niteLoad","srcAttr","srcsetAttr","visible","sequential","backgrounds","extraAttrs","playthrough","early","earlyTimeout","onComplete","resources","this","addClass","onProgress","resource","attr","percentage","closest","onLoad","onError","document","on","e","element","type","abort","hide","show","random_stuff","i","letters","colors","ii","color","c","Math","floor","random","push","progress","done"],"mappings":"AAAA,aAEA,MAEIA,EAAIC,OAEJC,SAAWF,EAAE,YAEbG,YAAc,SAAUC,GAEhBF,SAASG,GAAG,WACZH,SAASI,OAAO,UAEpB,MAAMC,EAAQL,SAASM,KAAK,MAAMF,OAAO,OAASF,EAAS,SAE3DF,SAASO,UAAUF,EAAMG,WA+CjC,IAAIC,SA3CJX,EAAE,eAAeY,UAEbC,QAAS,gBACTC,WAAY,mBAEZC,SAAS,EAETC,YAAY,EAEZC,aAAa,EACbC,cAEAC,YAAa,OAEbC,OAAO,EACPC,aAAc,IAEdC,WAAY,SAAUX,EAAUY,GAE5BvB,EAAEwB,MAAMC,SAAS,aAIrBC,WAAY,SAAUf,EAAUgB,GAE5B3B,EAAEwB,MAAMhB,KAAK,qBAAqBoB,KAAK,kBAAmBjB,EAASkB,YAC9DC,QAAQ,2BAA2BL,SAAS,YAIrDM,OAAQ,SAAUpB,EAAUgB,GAExB3B,EAAEwB,MAAMC,SAAS,cAGrBO,QAAS,SAAUrB,EAAUgB,GAEzB3B,EAAEwB,MAAMC,SAAS,iBAQzBzB,EAAEiC,UAEGC,GAAG,+BAAgC,SAAUC,EAAGC,GAE7CjC,YAAY,yBAA2BiC,KAI1CF,GAAG,iBAAkB,aAAc,SAAUC,GAE1CnC,EAAEwB,MAAMM,QAAQ,UAAUL,SAAS,WAItCS,GAAG,+BAAgC,2BAA4B,SAAUC,GAEtEnC,EAAEwB,MAAMM,QAAQ,UAAUL,SAAS,UAAuB,cAAXU,EAAEE,KAAuB,SAAW,OAItFH,GAAG,QAAS,+BAAgC,WAEzC,GAAIvB,SAEAR,YAAY,cAEZQ,SAAS2B,QACT3B,SAAW,KAEXX,EAAE,4BAA4BuC,OAC9BvC,EAAE,2BAA2BwC,WAE1B,CAEHxC,EAAE,2BAA2BuC,OAC7BvC,EAAE,4BAA4BwC,OAE9B,IAAIC,KAEJ,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEzB,IAAIC,EAAU,mBACVC,KAEJ,IAAK,IAAIC,EAAK,EAAGA,EAAK,EAAGA,IAAM,CAC3B,IAAIC,EAAQ,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnBD,GAASH,EAAQK,KAAKC,MAAsB,GAAhBD,KAAKE,WACrCN,EAAOC,GAAMC,EAGjBL,EAAaU,KAAK,0BAA4BP,EAAO,GAAK,IAAMA,EAAO,GAAK,QAIhFjC,SAAW,IAAIX,EAAEY,SAAS6B,GACtBzB,YAAY,IAGhBb,YAAY,oBAEZQ,SAASyC,SAAS,SAAUzB,GAExBxB,YAAYQ,SAASkB,WAAa,OAItClB,SAAS0C,KAAK,SAAU9B,GAEpBpB,YAAY,iBACZH,EAAE,2BAA2BwC,OAC7BxC,EAAE,4BAA4BuC,OAE9B5B,SAAW","sourcesContent":["\"use strict\";\r\n\r\nconst\r\n\r\n    $ = jQuery,\r\n\r\n    $console = $('#console'),\r\n\r\n    console_log = function (string) {\r\n\r\n        if ($console.is(':empty'))\r\n            $console.append('<ol />');\r\n\r\n        const $list = $console.find('ol').append('<li>' + string + '</li>');\r\n\r\n        $console.scrollTop($list.height());\r\n\r\n    };\r\n\r\n$('.playground').niteLoad({\r\n\r\n    srcAttr: 'data-nite-src',\r\n    srcsetAttr: 'data-nite-srcset',\r\n\r\n    visible: true,\r\n\r\n    sequential: true,\r\n\r\n    backgrounds: true,\r\n    extraAttrs: [],\r\n\r\n    playthrough: 'full',\r\n\r\n    early: false,\r\n    earlyTimeout: 6000,\r\n\r\n    onComplete: function (instance, resources) {\r\n\r\n        $(this).addClass('complete');\r\n\r\n    },\r\n\r\n    onProgress: function (instance, resource) {\r\n\r\n        $(this).find('[data-percentage]').attr('data-percentage', instance.percentage)\r\n            .closest('.playground__percentage').addClass('visible');\r\n\r\n    },\r\n\r\n    onLoad: function (instance, resource) {\r\n\r\n        $(this).addClass('has-loads');\r\n\r\n    },\r\n    onError: function (instance, resource) {\r\n\r\n        $(this).addClass('has-errors');\r\n\r\n    }\r\n\r\n});\r\n\r\nlet instance;\r\n\r\n$(document)\r\n\r\n    .on('niteLoad.nite niteError.nite', function (e, element) {\r\n\r\n        console_log('jQuery.fn.niteLoad(): ' + element);\r\n\r\n    })\r\n\r\n    .on('niteError.nite', 'figure img', function (e) {\r\n\r\n        $(this).closest('figure').addClass('error');\r\n\r\n    })\r\n\r\n    .on('niteLoad.nite niteError.nite', 'figure img, figure video', function (e) {\r\n\r\n        $(this).closest('figure').addClass('loaded' + (e.type === 'niteError' ? '-error' : ''));\r\n\r\n    })\r\n\r\n    .on('click', '[class*=\"nite-program-load\"]', function () {\r\n\r\n        if (instance) {\r\n\r\n            console_log('Aborted...');\r\n\r\n            instance.abort();\r\n            instance = null;\r\n\r\n            $('.nite-program-load--kill').hide();\r\n            $('.nite-program-load--run').show();\r\n\r\n        } else {\r\n\r\n            $('.nite-program-load--run').hide();\r\n            $('.nite-program-load--kill').show();\r\n\r\n            let random_stuff = [];\r\n\r\n            for (let i = 0; i < 10; i++) {\r\n\r\n                let letters = '0123456789ABCDEF',\r\n                    colors = [];\r\n\r\n                for (let ii = 0; ii < 2; ii++) {\r\n                    let color = '';\r\n                    for (let c = 0; c < 6; c++)\r\n                        color += letters[Math.floor(Math.random() * 16)];\r\n                    colors[ii] = color;\r\n                }\r\n\r\n                random_stuff.push('//placehold.it/720x720/' + colors[0] + '/' + colors[1] + '.jpg');\r\n\r\n            }\r\n\r\n            instance = new $.niteLoad(random_stuff, {\r\n                sequential: true\r\n            });\r\n\r\n            console_log('0% - Starting...');\r\n\r\n            instance.progress(function (resource) {\r\n\r\n                console_log(instance.percentage + '%');\r\n\r\n            });\r\n\r\n            instance.done(function (resources) {\r\n\r\n                console_log('100% - Done!!');\r\n                $('.nite-program-load--run').show();\r\n                $('.nite-program-load--kill').hide();\r\n\r\n                instance = null;\r\n\r\n            });\r\n\r\n        }\r\n\r\n    });"],"file":"test.min.js"}