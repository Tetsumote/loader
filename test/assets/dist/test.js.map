{"version":3,"sources":["test.js"],"names":["consoleDiv","document","querySelector","consoleLog","hasChildNodes","ol","createElement","append","list","li","innerHTML","string","scrollTop","offsetHeight","querySelectorAll","forEach","loadInstance","Loader","srcAttr","srcsetAttr","playthrough","visible","backgrounds","collection","element","observe","load","addEventListener","e","detail","resource","el","closest","classList","add","instance","instanceSequentialMode","style","display","abort","randomResources","i","letters","colors","ii","color","c","Math","floor","random","push","sequential","progress","percentage","done"],"mappings":"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","file":"test.js","sourcesContent":["const consoleDiv = document.querySelector('#console');\nconst consoleLog = string => {\n    if (!consoleDiv.hasChildNodes()) {\n        const ol = document.createElement('ol');\n        consoleDiv.append(ol);\n    }\n\n    const list = consoleDiv.querySelector('ol');\n    const li = document.createElement('li');\n    li.innerHTML = string;\n    list.append(li);\n\n    consoleDiv.scrollTop = list.offsetHeight;\n};\n[...document.querySelectorAll('.playground')].forEach(element => {\n    const loadInstance = new Loader({\n        srcAttr: 'data-src',\n        srcsetAttr: 'data-srcset',\n        playthrough: false,\n        visible: true,\n        backgrounds: true,\n\n        playthrough: 'full',\n\n        early: false,\n        earlyTimeout: 6000\n    });\n\n    loadInstance.collection = element;\n\n    loadInstance.observe();\n\n    loadInstance.load();\n});\n\n/*  onComplete: function(instance, resources) {\n        $(this).addClass('complete');\n    },\n\n    onProgress: function(instance, resource) {\n        $(this)\n            .find('[data-percentage]')\n            .attr('data-percentage', instance.percentage)\n            .closest('.playground__percentage')\n            .addClass('visible');\n    },\n\n    onLoad: function(instance, resource) {\n        $(this).addClass('has-loads');\n    },\n    onError: function(instance, resource) {\n        $(this).addClass('has-errors');\n    } */\n\ndocument.addEventListener('resourceLoad', e => {\n    consoleLog('Loader() load: ' + e.detail.resource);\n});\n\ndocument.addEventListener('resourceError', e => {\n    consoleLog('Loader() error: ' + e.detail.resource);\n});\n\n[...document.querySelectorAll('figure img, figure video')].forEach(el => {\n    el.addEventListener('resourceLoad', e => e.detail.element.closest('figure').classList.add('loaded'));\n    el.addEventListener('resourceError', e => e.detail.element.closest('figure').classList.add('loaded-error'));\n});\n\nlet instance;\nlet instanceSequentialMode = true;\n\ndocument.querySelector('.program-mode--sequential').addEventListener('click', () => {\n    if (instance !== null) {\n        return;\n    }\n\n    document.querySelector('.program-mode--parallel').style.display = 'block';\n    document.querySelector('.program-mode--sequential').style.display = 'none';\n\n    instanceSequentialMode = true;\n    consoleLog('Loader(): Sequential Mode');\n});\n\ndocument.querySelector('.program-mode--parallel').addEventListener('click', () => {\n    if (instance !== null) {\n        return;\n    }\n\n    document.querySelector('.program-mode--sequential').style.display = 'block';\n    document.querySelector('.program-mode--parallel').style.display = 'none';\n\n    instanceSequentialMode = false;\n    consoleLog('Loader(): Parallel Mode');\n});\n\n[...document.querySelectorAll('[class*=\"program-load\"]')].forEach(el =>\n    el.addEventListener('click', () => {\n        if (instance) {\n            consoleLog('Loader(): Aborted...');\n\n            instance.abort();\n            instance = null;\n\n            document.querySelector('.program-load--run').style.display = 'block';\n            document.querySelector('.program-load--kill').style.display = 'none';\n        } else {\n            document.querySelector('.program-load--run').style.display = 'none';\n            document.querySelector('.program-load--kill').style.display = 'block';\n\n            let randomResources = [];\n\n            for (let i = 0; i < 10; i++) {\n                let letters = '0123456789ABCDEF',\n                    colors = [];\n\n                for (let ii = 0; ii < 2; ii++) {\n                    let color = '';\n                    for (let c = 0; c < 6; c++) {\n                        color += letters[Math.floor(Math.random() * 16)];\n                    }\n                    colors[ii] = color;\n                }\n\n                randomResources.push('//placehold.it/720x720/' + colors[0] + '/' + colors[1] + '.jpg');\n            }\n\n            instance = new Loader({\n                sequential: instanceSequentialMode\n            });\n\n            instance.collection = randomResources;\n\n            consoleLog('Loader(): 0% - Starting...');\n\n            instance.progress(resource => {\n                consoleLog('Loader(): ' + instance.percentage + '%');\n            });\n\n            instance.done(resources => {\n                consoleLog('Loader(): 100% - Done!!');\n                document.querySelector('.program-load--run').style.display = 'block';\n                document.querySelector('.program-load--kill').style.display = 'none';\n\n                instance = null;\n            });\n\n            instance.load();\n        }\n    })\n);\n"]}