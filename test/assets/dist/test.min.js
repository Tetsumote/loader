'use strict';var $=jQuery,$console=$('#console'),console_log=function(a){$console.is(':empty')&&$console.append('<ol />');var b=$console.find('ol').append('<li>'+a+'</li>');$console.scrollTop(b.height())};$('.playground').nitePreload({srcAttr:'data-nite-src',srcsetAttr:'data-nite-srcset',visible:!0,sequential:!0,backgrounds:!0,extraAttrs:[],playthrough:'full',early:!1,earlyTimeout:6e3,onComplete:function(){$(this).addClass('complete')},onProgress:function(a){$(this).find('[data-percentage]').attr('data-percentage',a.percentage).closest('.playground__percentage').addClass('visible')},onLoad:function(){$(this).addClass('has-loads')},onError:function(){$(this).addClass('has-errors')}}),$(document).on('niteLoad.nite niteError.nite',function(a,b){console_log('jQuery.fn.nitePreload(): '+b)}).on('niteError.nite','figure img',function(){$(this).closest('figure').addClass('error')}).on('niteLoad.nite niteError.nite','figure img, figure video',function(a){$(this).closest('figure').addClass('loaded'+('niteError'===a.type?'-error':''))}).on('click','.controls__button--generate',function(){var a=$(this),b=a.data('instance');if(b)console_log(' - Aborted...'),b.abort(),b=null,$(this).hide(),$('#menu__instance--launch').show();else{$(this).hide(),$('#menu__instance--abort').show();for(var d=[],e=0;10>e;e++){for(var f,g=[],h=0;2>h;h++){f='';for(var i=0;6>i;i++)f+='0123456789ABCDEF'[Math.floor(16*Math.random())];g[h]=f}d.push('//placehold.it/720x720/'+g[0]+'/'+g[1]+'.jpg')}b=new $.nitePreload(d,{sequential:!0}),console_log('0%'),b.progress(function(){console.log(this),console_log(b.percentage+'%')}),b.done(function(){console.log(this),console_log(' - Done!!'),$('#menu__instance--abort').hide(),$('#menu__instance--launch').show(),b=null})}a.data('instance',b)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,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RUFBYixBQUFvQixDQUFKLEdBQWhCLEFBQXVCLEFBQ25CLE9BTlIsQUFBYyxrQkFNRyxDQUFRLEtBQUEsQUFBSyxNQUQxQixBQUNJLEFBQVMsQUFBUSxBQUEyQixFQUFoQixNQUFBLEFBQUssV0FDckMsQUFBTyxBQUFNLEFBQ2hCLE1BRUQsR0FBQSxBQUFhLEtBQUssMEJBQTRCLEVBQTVCLEFBQTRCLEFBQU8sR0FBbkMsQUFBd0MsSUFBTSxFQUE5QyxBQUE4QyxBQUFPLEdBQXZFLEFBQTRFLEFBRS9FLE9BRUQsR0FBVyxHQUFJLEdBQUosQUFBTSxBQUFZLGNBQWMsQUFDdkMsQ0FESixBQUFXLEFBQWdDLEFBQzFCLEFBR2pCLDRCQUFBLEFBQVksQUFFWixRQUFBLEFBQVMsU0FBUyxBQUFVLFVBQVUsQUFFbEMsU0FBQSxBQUFRLElBQVIsQUFBWSxBQUVaLGtCQUFZLEVBQUEsQUFBUyxXQUFyQixBQUFrQyxBQUVyQyxJQU5ELEFBUUEsS0FBQSxBQUFTLEtBQUssQUFBVSxVQUFXLEFBRS9CLFNBQUEsQUFBUSxJQUFSLEFBQVksQUFFWixrQkFBQSxBQUFZLEFBQ1osZUFBQSxBQUFFLDBCQUFGLEFBQTRCLEFBQzVCLFNBQUEsQUFBRSwyQkFBRixBQUE2QixBQUU3QixTQUFBLEFBQVcsQUFFZCxJQVZELEFBWUgsRUFFRCxHQUFBLEFBQUcsS0FBSCxBQUFRLEFBQVksQUFFdkIsYUF4RkwiLCJmaWxlIjoidGVzdC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuY29uc3RcblxuICAgICQgPSBqUXVlcnksXG5cbiAgICAkY29uc29sZSA9ICQoJyNjb25zb2xlJyksXG5cbiAgICBjb25zb2xlX2xvZyA9IGZ1bmN0aW9uKHN0cmluZyl7XG5cbiAgICAgICAgaWYoICRjb25zb2xlLmlzKCc6ZW1wdHknKSApXG4gICAgICAgICAgICAkY29uc29sZS5hcHBlbmQoJzxvbCAvPicpO1xuXG4gICAgICAgIGNvbnN0ICRsaXN0ID0gJGNvbnNvbGUuZmluZCgnb2wnKS5hcHBlbmQoJzxsaT4nK3N0cmluZysnPC9saT4nKTtcblxuICAgICAgICAkY29uc29sZS5zY3JvbGxUb3AoJGxpc3QuaGVpZ2h0KCkpO1xuXG4gICAgfTtcblxuJCgnLnBsYXlncm91bmQnKS5uaXRlUHJlbG9hZCh7XG5cbiAgICBzcmNBdHRyICAgICAgIDogJ2RhdGEtbml0ZS1zcmMnLFxuICAgIHNyY3NldEF0dHIgICAgOiAnZGF0YS1uaXRlLXNyY3NldCcsXG5cbiAgICB2aXNpYmxlICAgICAgIDogdHJ1ZSxcblxuICAgIHNlcXVlbnRpYWwgICAgOiB0cnVlLFxuXG4gICAgYmFja2dyb3VuZHMgICA6IHRydWUsXG4gICAgZXh0cmFBdHRycyAgICA6IFtdLFxuXG4gICAgcGxheXRocm91Z2ggICA6ICdmdWxsJyxcblxuICAgIGVhcmx5IDogZmFsc2UsXG4gICAgZWFybHlUaW1lb3V0IDogNjAwMCxcblxuICAgIG9uQ29tcGxldGUgOiBmdW5jdGlvbihpbnN0YW5jZSwgcmVzb3VyY2VzKXtcblxuICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdjb21wbGV0ZScpO1xuXG4gICAgfSxcblxuICAgIG9uUHJvZ3Jlc3MgOiBmdW5jdGlvbihpbnN0YW5jZSwgcmVzb3VyY2Upe1xuXG4gICAgICAgICQodGhpcykuZmluZCgnW2RhdGEtcGVyY2VudGFnZV0nKS5hdHRyKCdkYXRhLXBlcmNlbnRhZ2UnLCBpbnN0YW5jZS5wZXJjZW50YWdlKVxuICAgICAgICAgICAgLmNsb3Nlc3QoJy5wbGF5Z3JvdW5kX19wZXJjZW50YWdlJykuYWRkQ2xhc3MoJ3Zpc2libGUnKTtcblxuICAgIH0sXG5cbiAgICBvbkxvYWQgOiBmdW5jdGlvbihpbnN0YW5jZSwgcmVzb3VyY2Upe1xuXG4gICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ2hhcy1sb2FkcycpO1xuXG4gICAgfSxcbiAgICBvbkVycm9yIDogZnVuY3Rpb24oaW5zdGFuY2UsIHJlc291cmNlKXtcblxuICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdoYXMtZXJyb3JzJyk7XG5cbiAgICB9XG5cbn0pO1xuXG4kKGRvY3VtZW50KVxuXG4gICAgLm9uKCduaXRlTG9hZC5uaXRlIG5pdGVFcnJvci5uaXRlJywgZnVuY3Rpb24oZSwgZWxlbWVudCl7XG5cbiAgICAgICAgY29uc29sZV9sb2coJ2pRdWVyeS5mbi5uaXRlUHJlbG9hZCgpOiAnICsgZWxlbWVudCk7XG5cbiAgICB9KVxuXG4gICAgLm9uKCduaXRlRXJyb3Iubml0ZScsICdmaWd1cmUgaW1nJywgZnVuY3Rpb24oZSl7XG5cbiAgICAgICAgJCh0aGlzKS5jbG9zZXN0KCdmaWd1cmUnKS5hZGRDbGFzcygnZXJyb3InKTtcblxuICAgIH0pXG5cbiAgICAub24oJ25pdGVMb2FkLm5pdGUgbml0ZUVycm9yLm5pdGUnLCAnZmlndXJlIGltZywgZmlndXJlIHZpZGVvJywgZnVuY3Rpb24oZSl7XG5cbiAgICAgICAgJCh0aGlzKS5jbG9zZXN0KCdmaWd1cmUnKS5hZGRDbGFzcygnbG9hZGVkJysoIGUudHlwZSA9PT0gJ25pdGVFcnJvcicgPyAnLWVycm9yJyA6ICcnICkpO1xuXG4gICAgfSlcblxuICAgIC5vbignY2xpY2snLCAnLmNvbnRyb2xzX19idXR0b24tLWdlbmVyYXRlJywgZnVuY3Rpb24oKXtcblxuICAgICAgICBsZXQgJHQgPSAkKHRoaXMpLFxuICAgICAgICAgICAgaW5zdGFuY2UgPSAkdC5kYXRhKCdpbnN0YW5jZScpO1xuXG4gICAgICAgIGlmKCBpbnN0YW5jZSApIHtcblxuICAgICAgICAgICAgY29uc29sZV9sb2coJyAtIEFib3J0ZWQuLi4nKTtcblxuICAgICAgICAgICAgaW5zdGFuY2UuYWJvcnQoKTtcbiAgICAgICAgICAgIGluc3RhbmNlID0gbnVsbDtcblxuICAgICAgICAgICAgJCh0aGlzKS5oaWRlKCk7XG4gICAgICAgICAgICAkKCcjbWVudV9faW5zdGFuY2UtLWxhdW5jaCcpLnNob3coKTtcblxuICAgICAgICB9ZWxzZXtcblxuICAgICAgICAgICAgJCh0aGlzKS5oaWRlKCk7XG4gICAgICAgICAgICAkKCcjbWVudV9faW5zdGFuY2UtLWFib3J0Jykuc2hvdygpO1xuXG4gICAgICAgICAgICBsZXQgcmFuZG9tX3N0dWZmID0gW107XG5cbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXG4gICAgICAgICAgICAgICAgbGV0IGxldHRlcnMgPSAnMDEyMzQ1Njc4OUFCQ0RFRicsXG4gICAgICAgICAgICAgICAgICAgIGNvbG9ycyA9IFtdO1xuXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaWkgPSAwOyBpaSA8IDI7IGlpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNvbG9yID0gJyc7XG4gICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGMgPSAwOyBjIDwgNjsgYysrKVxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3IgKz0gbGV0dGVyc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxNildO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcnNbaWldID0gY29sb3I7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmFuZG9tX3N0dWZmLnB1c2goJy8vcGxhY2Vob2xkLml0LzcyMHg3MjAvJyArIGNvbG9yc1swXSArICcvJyArIGNvbG9yc1sxXSArICcuanBnJyk7XG5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaW5zdGFuY2UgPSBuZXcgJC5uaXRlUHJlbG9hZChyYW5kb21fc3R1ZmYsIHtcbiAgICAgICAgICAgICAgICBzZXF1ZW50aWFsIDogdHJ1ZVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGNvbnNvbGVfbG9nKCcwJScpO1xuXG4gICAgICAgICAgICBpbnN0YW5jZS5wcm9ncmVzcyhmdW5jdGlvbiAocmVzb3VyY2UpIHtcblxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMpO1xuXG4gICAgICAgICAgICAgICAgY29uc29sZV9sb2coaW5zdGFuY2UucGVyY2VudGFnZSArICclJyk7XG5cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpbnN0YW5jZS5kb25lKGZ1bmN0aW9uIChyZXNvdXJjZXMpIHtcblxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMpO1xuXG4gICAgICAgICAgICAgICAgY29uc29sZV9sb2coJyAtIERvbmUhIScpO1xuICAgICAgICAgICAgICAgICQoJyNtZW51X19pbnN0YW5jZS0tYWJvcnQnKS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgJCgnI21lbnVfX2luc3RhbmNlLS1sYXVuY2gnKS5zaG93KCk7XG5cbiAgICAgICAgICAgICAgICBpbnN0YW5jZSA9IG51bGw7XG5cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH1cblxuICAgICAgICAkdC5kYXRhKCdpbnN0YW5jZScsIGluc3RhbmNlKTtcblxuICAgIH0pOyJdfQ==
