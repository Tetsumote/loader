{"version":3,"sources":["loader.mjs"],"names":["global","factory","exports","module","define","amd","self","loader","loadStyle","url","Promise","resolve","reject","proxy","document","createElement","textContent","querySelector","appendChild","loadGeneric","tag","successMethod","errorMethod","parentTarget","message","source","lineno","colno","error","src","loadScript","appendTarget","loadImage","loadAudioVideo","loadAudio","loadVideo","SupportedFileExtensions","IMAGE","AUDIO","VIDEO","SCRIPT","STYLE","BASE_64_HEAD","parseStringResource","string","RegExp","test","split","pop","reduce","x","y","length","format","extensions","join","matches","match","type","Error","parseElementResource","element","currentSrc","parseResource","resource","HTMLElement","loaders","image","audio","video","style","script","load","e","then","Loader","resources","_resources","key"],"mappings":"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","file":"loader.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('loader', factory) :\n    (global = global || self, global.loader = factory());\n}(this, (function () { 'use strict';\n\n    /**\n     *\n     * @param url\n     */\n    const loadStyle = url =>\n        new Promise((resolve, reject) => {\n            const proxy = document.createElement(\"style\");\n\n            proxy.textContent = '@import \"' + url + '\"';\n\n            // TODO: reject(new Error(\"?\"))\n\n            document.querySelector(\"head\").appendChild(proxy);\n        });\n\n    /**\n     *\n     * @param url\n     * @param tag\n     * @param successMethod\n     * @param errorMethod\n     * @param parentTarget\n     */\n    const loadGeneric = (\n        url,\n        tag,\n        successMethod = \"onload\",\n        errorMethod = \"onerror\",\n        parentTarget\n    ) =>\n        new Promise((resolve, reject) => {\n            const proxy = document.createElement(tag);\n\n            proxy[successMethod] = () => resolve(url);\n            proxy[errorMethod] = (message, source, lineno, colno, error) =>\n                reject(error);\n\n            proxy.src = url;\n\n            if (parentTarget) {\n                parentTarget.appendChild(proxy);\n            }\n        });\n\n    /**\n     *\n     * @param url\n     */\n    const loadScript = url =>\n        loadGeneric(\n            url,\n            \"script\",\n            \"onloaded\",\n            \"onError\",\n            document.querySelector(appendTarget)\n        );\n\n    /**\n     *\n     * @param url\n     */\n    const loadImage = url => loadGeneric(url, \"img\");\n\n    /**\n     *\n     * @param url\n     */\n    const loadAudioVideo = url => loadGeneric(url, \"audio\", \"onloadedmetadata\");\n\n    /**\n     *\n     * @param url\n     */\n    const loadAudio = url => loadAudioVideo(url);\n    /**\n     *\n     * @param url\n     */\n    const loadVideo = url => loadAudioVideo(url);\n\n    const SupportedFileExtensions = {\n        IMAGE: [\n            \"jp[e]?g\",\n            \"jpe\",\n            \"jif\",\n            \"jfif\",\n            \"jfi\",\n            \"gif\",\n            \"png\",\n            \"tif[f]?\",\n            \"bmp\",\n            \"dib\",\n            \"webp\",\n            \"ico\",\n            \"cur\",\n            \"svg\"\n        ],\n        AUDIO: [\"mp3\", \"ogg\", \"oga\", \"spx\", \"ogg\", \"wav\"],\n        VIDEO: [\"mp4\", \"ogg\", \"ogv\", \"webm\"],\n        SCRIPT: [\"js\", \"mjs\"],\n        STYLE: [\"css\"]\n    };\n\n    const BASE_64_HEAD = \";base64,\";\n\n    /**\n     *\n     * @param string\n     */\n    const parseStringResource = string => {\n        if (!new RegExp(`${BASE_64_HEAD}`).test(string)) {\n            string = string\n                .split(\",\")\n                .pop() // gets the last\n                .split(\" \")\n                .reduce((x, y) => (x.length > y.length ? x : y)); // gets the longest fragment in order to skip \"x2\", \"\" etc...\n        }\n\n        for (let format in SupportedFileExtensions) {\n            const extensions = SupportedFileExtensions[format].join(\"|\");\n\n            if (\n                new RegExp(\n                    `(.(${extensions})$)|data:${format}/(${extensions})${BASE_64_HEAD}`\n                ).test(string)\n            ) {\n                const matches =\n                    string.match(new RegExp(`.(${extensions})$`, \"g\")) ||\n                    string.match(\n                        new RegExp(`^data:${format}/(${extensions})`, \"g\")\n                    );\n\n                if (null !== matches) {\n                    return {\n                        type: format,\n                        url: string /*,\n                        extension: matches[0]\n                            .replace(`data:${format}/`, \"\")\n                            .replace(\".\", \"\")*/\n                    };\n                }\n            }\n        }\n\n        throw new Error(\"Error while parsing the resource string.\");\n    };\n\n    /**\n     *\n     * @param element\n     */\n    const parseElementResource = element => {\n        if (\"currentSrc\" in element) {\n            return element.currentSrc;\n        }\n\n        throw new Error(\"Error while parsing the resource element.\");\n    };\n\n    /**\n     *\n     * @param resource\n     */\n    const parseResource = resource => {\n        if (resource instanceof HTMLElement) {\n            resource = parseElementResource(resource);\n        }\n\n        if (typeof resource === \"string\") {\n            resource = parseStringResource(resource);\n        }\n\n        return resource;\n    };\n\n    const loaders = {\n        image: loadImage,\n        audio: loadAudio,\n        video: loadVideo,\n        style: loadStyle,\n        script: loadScript\n    };\n\n    /**\n     *\n     * @param resource\n     */\n    const load = resource =>\n        new Promise((resolve, reject) => {\n            try {\n                resource = parseResource(resource);\n            } catch (e) {\n                reject(e);\n            }\n\n            loaders[resource.type](resource.url)\n                .then(resolve)\n                .catch(reject);\n        });\n\n    /**\n     *\n     */\n    class Loader {\n        constructor(resources = []) {\n            this._resources = resources;\n        }\n\n        /**\n         *\n         */\n        load() {\n            return new Promise((resolve, reject) => {\n                for (var key in this._resources) {\n                    load(this._resources[key])\n                        .then(resolve)\n                        .catch(() => reject(new Error(\"Woa\")));\n                }\n            });\n        }\n    }\n\n    return Loader;\n\n})));\n"]}