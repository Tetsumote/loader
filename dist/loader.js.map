{"version":3,"sources":["loader.mjs"],"names":["global","factory","exports","module","define","amd","self","loader","loadStyle","url","Promise","resolve","reject","proxy","document","createElement","textContent","querySelector","appendChild","loadScript","onload","onerror","message","source","lineno","colno","error","src","loadImage","loadAudioVideo","tag","onloadedmetadata","loadAudio","loadVideo","SupportedFileExtensions","IMAGE","AUDIO","VIDEO","SCRIPT","STYLE","BASE_64_HEAD","parseStringResource","string","RegExp","test","split","pop","reduce","x","y","length","format","extensions","join","matches","match","type","Error","parseElementResource","element","currentSrc","parseResource","resource","HTMLElement","loaders","image","audio","video","style","script","load","e","then","Loader","resources","_resources","key"],"mappings":";;;;;;;;;;AAAC,WAAUA,MAAV,EAAkBC,OAAlB,EAA2B;AACxB,UAAOC,OAAP,yCAAOA,OAAP,OAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DA,MAAM,CAACD,OAAP,GAAiBD,OAAO,EAAvF,GACA,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GAA6CD,MAAM,CAAC,QAAD,EAAWH,OAAX,CAAnD,IACCD,MAAM,GAAGA,MAAM,IAAIM,IAAnB,EAAyBN,MAAM,CAACO,MAAP,GAAgBN,OAAO,EADjD,CADA;AAGH,CAJA,UAIQ,YAAY;AAAE;;AAEnB,MAAMO,SAAS,GAAG,SAAZA,SAAY,CAAAC,GAAG;AAAA,WACjB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7B,UAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AAEAF,MAAAA,KAAK,CAACG,WAAN,GAAoB,cAAcP,GAAd,GAAoB,GAAxC;AAIAK,MAAAA,QAAQ,CAACG,aAAT,CAAuB,MAAvB,EAA+BC,WAA/B,CAA2CL,KAA3C;AACH,KARD,CADiB;AAAA,GAArB;;AAWA,MAAMM,UAAU,GAAG,SAAbA,UAAa,CAAAV,GAAG;AAAA,WAClB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7B,UAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;;AAEAF,MAAAA,KAAK,CAACO,MAAN,GAAe;AAAA,eAAMT,OAAO,CAACF,GAAD,CAAb;AAAA,OAAf;;AACAI,MAAAA,KAAK,CAACQ,OAAN,GAAgB,UAACC,OAAD,EAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,KAA1B,EAAiCC,KAAjC;AAAA,eACZd,MAAM,CAACc,KAAD,CADM;AAAA,OAAhB;;AAGAb,MAAAA,KAAK,CAACc,GAAN,GAAYlB,GAAZ;AAEAK,MAAAA,QAAQ,CAACG,aAAT,CAAuB,MAAvB,EAA+BC,WAA/B,CAA2CL,KAA3C;AACH,KAVD,CADkB;AAAA,GAAtB;;AAaA,MAAMe,SAAS,GAAG,SAAZA,SAAY,CAAAnB,GAAG;AAAA,WACjB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7B,UAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;;AAEAF,MAAAA,KAAK,CAACO,MAAN,GAAe;AAAA,eAAMT,OAAO,CAACF,GAAD,CAAb;AAAA,OAAf;;AACAI,MAAAA,KAAK,CAACQ,OAAN,GAAgB,UAACC,OAAD,EAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,KAA1B,EAAiCC,KAAjC;AAAA,eACZd,MAAM,CAACc,KAAD,CADM;AAAA,OAAhB;;AAGAb,MAAAA,KAAK,CAACc,GAAN,GAAYlB,GAAZ;AACH,KARD,CADiB;AAAA,GAArB;;AAWA,MAAMoB,cAAc,GAAG,SAAjBA,cAAiB,CAACpB,GAAD,EAAMqB,GAAN;AAAA,WACnB,IAAIpB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7B,UAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuBe,GAAvB,CAAd;;AAEAjB,MAAAA,KAAK,CAACkB,gBAAN,GAAyB;AAAA,eAAMpB,OAAO,CAACF,GAAD,CAAb;AAAA,OAAzB;;AACAI,MAAAA,KAAK,CAACQ,OAAN,GAAgB,UAACC,OAAD,EAAUC,MAAV,EAAkBC,MAAlB,EAA0BC,KAA1B,EAAiCC,KAAjC;AAAA,eACZd,MAAM,CAACc,KAAD,CADM;AAAA,OAAhB;;AAGAb,MAAAA,KAAK,CAACc,GAAN,GAAYlB,GAAZ;AACH,KARD,CADmB;AAAA,GAAvB;;AAWA,MAAMuB,SAAS,GAAG,SAAZA,SAAY,CAAAvB,GAAG;AAAA,WAAIoB,cAAc,CAACpB,GAAD,EAAM,OAAN,CAAlB;AAAA,GAArB;;AACA,MAAMwB,SAAS,GAAG,SAAZA,SAAY,CAAAxB,GAAG;AAAA,WAAIoB,cAAc,CAACpB,GAAD,EAAM,OAAN,CAAlB;AAAA,GAArB;;AAEA,MAAMyB,uBAAuB,GAAG;AAC5BC,IAAAA,KAAK,EAAE,CACH,SADG,EAEH,KAFG,EAGH,KAHG,EAIH,MAJG,EAKH,KALG,EAMH,KANG,EAOH,KAPG,EAQH,SARG,EASH,KATG,EAUH,KAVG,EAWH,MAXG,EAYH,KAZG,EAaH,KAbG,EAcH,KAdG,CADqB;AAiB5BC,IAAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,CAjBqB;AAkB5BC,IAAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,MAAtB,CAlBqB;AAmB5BC,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,KAAP,CAnBoB;AAoB5BC,IAAAA,KAAK,EAAE,CAAC,KAAD;AApBqB,GAAhC;AAuBA,MAAMC,YAAY,GAAG,UAArB;;AAEA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,MAAM,EAAI;AAClC,QAAI,CAAC,IAAIC,MAAJ,WAAcH,YAAd,GAA8BI,IAA9B,CAAmCF,MAAnC,CAAL,EAAiD;AAC7CA,MAAAA,MAAM,GAAGA,MAAM,CACVG,KADI,CACE,GADF,EAEJC,GAFI,GAGJD,KAHI,CAGE,GAHF,EAIJE,MAJI,CAIG,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAWD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAb,GAAsBF,CAAtB,GAA0BC,CAArC;AAAA,OAJH,CAAT;AAKH;;AAED,SAAK,IAAIE,MAAT,IAAmBjB,uBAAnB,EAA4C;AACxC,UAAMkB,UAAU,GAAGlB,uBAAuB,CAACiB,MAAD,CAAvB,CAAgCE,IAAhC,CAAqC,GAArC,CAAnB;;AAEA,UACI,IAAIV,MAAJ,cACUS,UADV,sBACgCD,MADhC,eAC2CC,UAD3C,cACyDZ,YADzD,GAEEI,IAFF,CAEOF,MAFP,CADJ,EAIE;AACE,YAAMY,OAAO,GACTZ,MAAM,CAACa,KAAP,CAAa,IAAIZ,MAAJ,aAAgBS,UAAhB,SAAgC,GAAhC,CAAb,KACAV,MAAM,CAACa,KAAP,CACI,IAAIZ,MAAJ,iBAAoBQ,MAApB,eAA+BC,UAA/B,QAA8C,GAA9C,CADJ,CAFJ;;AAMA,YAAI,SAASE,OAAb,EAAsB;AAClB,iBAAO;AACHE,YAAAA,IAAI,EAAEL,MADH;AAEH1C,YAAAA,GAAG,EAAEiC;AAFF,WAAP;AAOH;AACJ;AACJ;;AAED,UAAM,IAAIe,KAAJ,CAAU,0CAAV,CAAN;AACH,GApCD;;AAsCA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,OAAO,EAAI;AACpC,QAAI,gBAAgBA,OAApB,EAA6B;AACzB,aAAOA,OAAO,CAACC,UAAf;AACH;;AAED,UAAM,IAAIH,KAAJ,CAAU,2CAAV,CAAN;AACH,GAND;;AAQA,MAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,QAAQ,EAAI;AAC9B,QAAIA,QAAQ,YAAYC,WAAxB,EAAqC;AACjCD,MAAAA,QAAQ,GAAGJ,oBAAoB,CAACI,QAAD,CAA/B;AACH;;AAED,QAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAC9BA,MAAAA,QAAQ,GAAGrB,mBAAmB,CAACqB,QAAD,CAA9B;AACH;;AAED,WAAOA,QAAP;AACH,GAVD;;AAYA,MAAME,OAAO,GAAG;AACZC,IAAAA,KAAK,EAAErC,SADK;AAEZsC,IAAAA,KAAK,EAAElC,SAFK;AAGZmC,IAAAA,KAAK,EAAElC,SAHK;AAIZmC,IAAAA,KAAK,EAAE5D,SAJK;AAKZ6D,IAAAA,MAAM,EAAElD;AALI,GAAhB;;AAQA,MAAMmD,KAAI,GAAG,SAAPA,IAAO,CAAAR,QAAQ;AAAA,WACjB,IAAIpD,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7B,UAAI;AACAkD,QAAAA,QAAQ,GAAGD,aAAa,CAACC,QAAD,CAAxB;AACH,OAFD,CAEE,OAAOS,CAAP,EAAU;AACR3D,QAAAA,MAAM,CAAC2D,CAAD,CAAN;AACH;;AAEDP,MAAAA,OAAO,CAACF,QAAQ,CAACN,IAAV,CAAP,CAAuBM,QAAQ,CAACrD,GAAhC,EACK+D,IADL,CACU7D,OADV,WAEWC,MAFX;AAGH,KAVD,CADiB;AAAA,GAArB;;AA9IiB,MA8JX6D,MA9JW;AA+Jb,sBAA4B;AAAA,UAAhBC,SAAgB,uEAAJ,EAAI;;AAAA;;AACxB,WAAKC,UAAL,GAAkBD,SAAlB;AACH;;AAjKY;AAAA;AAAA,6BAsKN;AAAA;;AACH,eAAO,IAAIhE,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,eAAK,IAAIgE,GAAT,IAAgB,KAAI,CAACD,UAArB,EAAiC;AAC7BL,YAAAA,KAAI,CAAC,KAAI,CAACK,UAAL,CAAgBC,GAAhB,CAAD,CAAJ,CACKJ,IADL,CACU7D,OADV,WAEW;AAAA,qBAAMC,MAAM,CAAC,IAAI6C,KAAJ,CAAU,KAAV,CAAD,CAAZ;AAAA,aAFX;AAGH;AACJ,SANM,CAAP;AAOH;AA9KY;;AAAA;AAAA;;AAiLjB,SAAOgB,MAAP;AAEH,CAvLA,CAAD","file":"loader.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('loader', factory) :\n    (global = global || self, global.loader = factory());\n}(this, (function () { 'use strict';\n\n    const loadStyle = url =>\n        new Promise((resolve, reject) => {\n            const proxy = document.createElement(\"style\");\n\n            proxy.textContent = '@import \"' + url + '\"';\n\n            // TODO: reject(new Error(\"?\"))\n\n            document.querySelector(\"head\").appendChild(proxy);\n        });\n\n    const loadScript = url =>\n        new Promise((resolve, reject) => {\n            const proxy = document.createElement(\"script\");\n\n            proxy.onload = () => resolve(url);\n            proxy.onerror = (message, source, lineno, colno, error) =>\n                reject(error);\n\n            proxy.src = url;\n\n            document.querySelector(\"head\").appendChild(proxy);\n        });\n\n    const loadImage = url =>\n        new Promise((resolve, reject) => {\n            const proxy = document.createElement(\"img\");\n\n            proxy.onload = () => resolve(url);\n            proxy.onerror = (message, source, lineno, colno, error) =>\n                reject(error);\n\n            proxy.src = url;\n        });\n\n    const loadAudioVideo = (url, tag) =>\n        new Promise((resolve, reject) => {\n            const proxy = document.createElement(tag);\n\n            proxy.onloadedmetadata = () => resolve(url);\n            proxy.onerror = (message, source, lineno, colno, error) =>\n                reject(error);\n\n            proxy.src = url;\n        });\n\n    const loadAudio = url => loadAudioVideo(url, \"audio\");\n    const loadVideo = url => loadAudioVideo(url, \"video\");\n\n    const SupportedFileExtensions = {\n        IMAGE: [\n            \"jp[e]?g\",\n            \"jpe\",\n            \"jif\",\n            \"jfif\",\n            \"jfi\",\n            \"gif\",\n            \"png\",\n            \"tif[f]?\",\n            \"bmp\",\n            \"dib\",\n            \"webp\",\n            \"ico\",\n            \"cur\",\n            \"svg\"\n        ],\n        AUDIO: [\"mp3\", \"ogg\", \"oga\", \"spx\", \"ogg\", \"wav\"],\n        VIDEO: [\"mp4\", \"ogg\", \"ogv\", \"webm\"],\n        SCRIPT: [\"js\", \"mjs\"],\n        STYLE: [\"css\"]\n    };\n\n    const BASE_64_HEAD = \";base64,\";\n\n    const parseStringResource = string => {\n        if (!new RegExp(`${BASE_64_HEAD}`).test(string)) {\n            string = string\n                .split(\",\")\n                .pop() // gets the last\n                .split(\" \")\n                .reduce((x, y) => (x.length > y.length ? x : y)); // gets the longest fragment in order to skip \"x2\", \"\" etc...\n        }\n\n        for (let format in SupportedFileExtensions) {\n            const extensions = SupportedFileExtensions[format].join(\"|\");\n\n            if (\n                new RegExp(\n                    `(.(${extensions})$)|data:${format}/(${extensions})${BASE_64_HEAD}`\n                ).test(string)\n            ) {\n                const matches =\n                    string.match(new RegExp(`.(${extensions})$`, \"g\")) ||\n                    string.match(\n                        new RegExp(`^data:${format}/(${extensions})`, \"g\")\n                    );\n\n                if (null !== matches) {\n                    return {\n                        type: format,\n                        url: string /*,\n                        extension: matches[0]\n                            .replace(`data:${format}/`, \"\")\n                            .replace(\".\", \"\")*/\n                    };\n                }\n            }\n        }\n\n        throw new Error(\"Error while parsing the resource string.\");\n    };\n\n    const parseElementResource = element => {\n        if (\"currentSrc\" in element) {\n            return element.currentSrc;\n        }\n\n        throw new Error(\"Error while parsing the resource element.\");\n    };\n\n    const parseResource = resource => {\n        if (resource instanceof HTMLElement) {\n            resource = parseElementResource(resource);\n        }\n\n        if (typeof resource === \"string\") {\n            resource = parseStringResource(resource);\n        }\n\n        return resource;\n    };\n\n    const loaders = {\n        image: loadImage,\n        audio: loadAudio,\n        video: loadVideo,\n        style: loadStyle,\n        script: loadScript\n    };\n\n    const load = resource =>\n        new Promise((resolve, reject) => {\n            try {\n                resource = parseResource(resource);\n            } catch (e) {\n                reject(e);\n            }\n\n            loaders[resource.type](resource.url)\n                .then(resolve)\n                .catch(reject);\n        });\n\n    /**\n     *\n     */\n    class Loader {\n        constructor(resources = []) {\n            this._resources = resources;\n        }\n\n        /**\n         *\n         */\n        load() {\n            return new Promise((resolve, reject) => {\n                for (var key in this._resources) {\n                    load(this._resources[key])\n                        .then(resolve)\n                        .catch(() => reject(new Error(\"Woa\")));\n                }\n            });\n        }\n    }\n\n    return Loader;\n\n})));\n"]}