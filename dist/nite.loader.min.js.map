{"version":3,"sources":["nite.loader.js"],"names":["window","document","$","undefined","generateInstanceID","Math","floor","random","pluginName","pluginMethod","pluginInstance","CustomEvent","_polyfill","event","params","bubbles","cancelable","detail","evt","createEvent","initCustomEvent","prototype","Event","supportedExtensions","image","audio","video","supportedTags","IntersectionObserverSupported","pictureElementSupported","stringContains","heystack","needle","String","includes","indexOf","stringStartsWith","startsWith","substr","length","arrayFindIndex","filter","Array","findIndex","index","detachEventListener","element","events","Object","keys","privateEventsStorage","forEach","key","eventNameWithNamespace","replace","type","split","join","removeEventListener","handler","attachEventListener","once","count","_handler","call","this","addEventListener","hyphensToCamelCase","string","g","toUpperCase","capitalize","charAt","slice","nodelistToArray","nodelist","isInArray","isVisible","intersectionRatio","getComputedStyle","bodyEl","getElementsByTagName","winWidth","innerWidth","documnt","documentElement","clientWidth","winHeight","innerHeight","clientHeight","rect","getBoundingClientRect","right","bottom","left","top","isHTMLElement","HTMLElement","e","nodeType","style","ownerDocument","isLoaded","source","privateCache","currentSrc","complete","readyState","isBroken","naturalWidth","videoWidth","decodeResource","resource","output","format","extension","tag","consistent","breakLoop","formatCandidate","RegExp","test","matches64","match","matches","tagName","toLowerCase","allTags","values","tags","SingleLoader","[object Object]","options","_settings","srcAttr","srcsetAttr","playthrough","visible","_id","_idEvent","_busy","_element","_resource","_format","_observer","_done","_success","_error","_callback","unobserve","src","push","thisArguments","apply","data","id","info","_tag","_consistent","_exists","_originalElement","createElement","dataset","IntersectionObserver","entries","observer","entry","target","root","rootMargin","threshold","observe","picture","closest","querySelectorAll","el","setAttribute","isPlaythroughModeNormal","isPlaythroughModeFull","sources","isFullyBuffered","media","buffered","round","end","seekable","callMediaLoad","sourcesErrorId","thisSource","load","onProgressReplacementInterval","setInterval","isError","duration","currentTime","paused","play","clearInterval","pause","callback","status","getAttribute","srcset","removeAttribute","Loader","_collection","_collectionLoaded","_collectionInstances","_collectionPending","_resourcesLoaded","backgrounds","attributes","contains","isArray","percentage","_progress","_loop","_abort","_loaded","_complete","collection","collectedResources","targets","targetsExtended","targetsFilter","targetsTags","children","x","targetSource","targetsBg","backgroundImage","url","attr","item","sequentialMode","sequential","i","thisLoadId","thisLoadIndex","thisLoadInstance","instance","done","aProgress","parseFloat","toFixed","thisResource","resources","_func","thisInstance","abort","define","amd","exports","module","$window","throttle","wait","context","timeout","callbackArgs","later","arguments","setTimeout","methodCollection","fn","originalUserOptions","settings","extraAttrs","early","earlyTimeout","onProgress","onLoad","onError","onComplete","isFunction","each","$element","uniqueMethodPluginName","progress","trigger","pluginPrefix","eventName","off","thisMethodCollection","is","on","clearTimeout","parseInt","isNaN","isFinite","jQuery"],"mappings":"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","sourcesContent":["/*! Nite Loader | Daniele Fioroni | dfioroni91@gmail.com */\r\n(function (window, document, $, undefined) {\r\n    'use strict';\r\n\r\n    const\r\n        /**\r\n         * @returns {string}\r\n         */\r\n        generateInstanceID = () => {\r\n            return Math.floor(Math.random() * (9999 - 1000)) + 1000;\r\n        },\r\n        pluginPrefix = 'nite',\r\n        pluginMethod = pluginPrefix + 'Load',\r\n        pluginName = pluginMethod + 'er',\r\n        pluginInstance = generateInstanceID(),\r\n        eventNamespaceParserSeparator = '__namespace__',\r\n        CustomEvent = window.CustomEvent || (() => {\r\n            const _polyfill = (event, params) => {\r\n                params = params || { bubbles: false, cancelable: false, detail: undefined };\r\n                const evt = document.createEvent('CustomEvent');\r\n                evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n                return evt;\r\n            };\r\n            _polyfill.prototype = window.Event.prototype;\r\n            return _polyfill;\r\n        })(),\r\n        supportedExtensions = {\r\n            image: 'jp[e]?g|jpe|jif|jfif|jfi|gif|png|tif[f]?|bmp|dib|webp|ico|cur|svg',\r\n            audio: 'mp3|ogg|oga|spx|ogg|wav',\r\n            video: 'mp4|ogv|webm'\r\n        },\r\n        supportedTags = {\r\n            image: 'img|picture|source',\r\n            audio: 'audio|source',\r\n            video: 'video|source'\r\n        },\r\n        IntersectionObserverSupported = 'IntersectionObserver' in window,\r\n        pictureElementSupported = 'HTMLPictureElement' in window,\r\n        /**\r\n         * @param {string} heystack\r\n         * @param {string} needle\r\n         * @returns {boolean}\r\n         */\r\n        stringContains = (heystack, needle) => {\r\n            return String.prototype.includes ? heystack.includes(needle) : heystack.indexOf(needle, 0) !== -1\r\n        },\r\n        /**\r\n         * @param {string} heystack\r\n         * @param {string} needle\r\n         * @returns {boolean}\r\n         */\r\n        stringStartsWith = (heystack, needle) => {\r\n            return String.prototype.startsWith ? heystack.startsWith(needle) : heystack.substr(0, needle.length) === needle;\r\n        },\r\n        /**\r\n         * @param {Array} heystack\r\n         * @param {Function} filter\r\n         * @returns {number}\r\n         */\r\n        arrayFindIndex = (heystack, filter) => {\r\n            return Array.prototype.findIndex ? heystack.findIndex(filter) : (() => {\r\n                let length = heystack.length,\r\n                    index = -1;\r\n                while (++index < length) {\r\n                    if (filter(heystack[index], index, heystack)) {\r\n                        return index;\r\n                    }\r\n                }\r\n                return -1;\r\n            })();\r\n        },\r\n        /**\r\n         * @param {HTMLElement} element\r\n         * @param {string} events\r\n         * @returns {undefined}\r\n         */\r\n        detachEventListener = (element, events) => {\r\n\r\n            if (!element || typeof events !== 'string') {\r\n                return;\r\n            }\r\n\r\n            if (stringStartsWith(events, '.')) {\r\n                Object.keys(privateEventsStorage).forEach(key => {\r\n                    const eventNameWithNamespace = key.replace(eventNamespaceParserSeparator, '.');\r\n                    if (stringContains(eventNameWithNamespace, events) && privateEventsStorage[key].element === element) {\r\n                        detachEventListener(element, eventNameWithNamespace);\r\n                    }\r\n                });\r\n            } else {\r\n\r\n                events = events.split('.');\r\n\r\n                const\r\n                    type = events[0],\r\n                    namespace = events[1];\r\n\r\n                if (namespace) {\r\n                    events = events.join(eventNamespaceParserSeparator);\r\n                }\r\n\r\n                if (events in privateEventsStorage) {\r\n                    element.removeEventListener(type, privateEventsStorage[events].handler);\r\n                    delete privateEventsStorage[events];\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n        /**\r\n         * @param {HTMLElement} element\r\n         * @param {string} events\r\n         * @param {Function} handler\r\n         * @param {boolean} once\r\n         * @returns {undefined}\r\n         */\r\n        attachEventListener = (element, events, handler, once) => {\r\n\r\n            if (!element || typeof events !== 'string' || typeof handler !== 'function') {\r\n                return;\r\n            }\r\n\r\n            events = events.split('.');\r\n\r\n            const\r\n                type = events[0],\r\n                namespace = events[1];\r\n\r\n            if (namespace) {\r\n                events = events.join(eventNamespaceParserSeparator);\r\n            }\r\n\r\n            privateEventsStorage[events] = {\r\n                element: element,\r\n                count: 0,\r\n                once: false\r\n            };\r\n\r\n            if (true === once) {\r\n                let _handler = handler;\r\n                handler = function (event) {\r\n                    if (events in privateEventsStorage) {\r\n                        privateEventsStorage[events].count++;\r\n                        if (privateEventsStorage[events].once && privateEventsStorage[events].count > 1) {\r\n                            return;\r\n                        }\r\n                        _handler.call(this, event);\r\n                    }\r\n                    detachEventListener(element, events);\r\n                }\r\n            } else {\r\n                once = false;\r\n            }\r\n\r\n            privateEventsStorage[events] = {\r\n                ...privateEventsStorage[events], ...{\r\n                    handler: handler,\r\n                    once: once\r\n                }\r\n            };\r\n\r\n            element.addEventListener(type, privateEventsStorage[events].handler, { once: once });\r\n\r\n        },\r\n        /**\r\n         * @param {string} string\r\n         * @returns {string}\r\n         */\r\n        hyphensToCamelCase = string => {\r\n            return string.replace(/-([a-z])/g, g => g[1].toUpperCase());\r\n        },\r\n        /**\r\n         * @param {string} string\r\n         * @returns {string}\r\n         */\r\n        capitalize = string => {\r\n            return string.charAt(0).toUpperCase() + string.slice(1);\r\n        },\r\n        /**\r\n         * @param {NodeList} nodelist\r\n         * @returns {Array}\r\n         */\r\n        nodelistToArray = nodelist => {\r\n            return [...nodelist];\r\n        },\r\n        /**\r\n         * @param {*} needle\r\n         * @param {Array} heystack\r\n         * @returns {boolean}\r\n         */\r\n        isInArray = (needle, heystack) => {\r\n            return heystack.indexOf(needle) > -1;\r\n        },\r\n        /**\r\n         * @param {HTMLElement} element\r\n         * @returns {boolean}\r\n         */\r\n        isVisible = element => {\r\n\r\n            if( IntersectionObserverSupported && 'intersectionRatio' in element ){\r\n                return element.intersectionRatio > 0;\r\n            }\r\n\r\n            if (window.getComputedStyle(element, 'display') === 'none') {\r\n                return false;\r\n            }\r\n\r\n            const\r\n                bodyEl = document.getElementsByTagName('body')[0],\r\n                winWidth = window.innerWidth || documnt.documentElement.clientWidth || bodyEl.clientWidth,\r\n                winHeight = window.innerHeight || documnt.documentElement.clientHeight || bodyEl.clientHeight,\r\n                rect = element.getBoundingClientRect();\r\n\r\n            return !(rect.right < 0 || rect.bottom < 0 || rect.left > winWidth || rect.top > winHeight);\r\n\r\n        },\r\n        /**\r\n         * @param {HTMLElement} element\r\n         * @returns {boolean}\r\n         */\r\n        isHTMLElement = element => {\r\n            if (typeof element !== 'object') {\r\n                return false;\r\n            }\r\n            try {\r\n                return element instanceof HTMLElement;\r\n            } catch (e) {\r\n                return element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object';\r\n            }\r\n        },\r\n        /**\r\n         * @param {string|HTMLElement} source\r\n         * @returns {boolean}\r\n         */\r\n        isLoaded = source => {\r\n            return (\r\n                (\r\n                    typeof source === 'string'\r\n                    &&\r\n                    isInArray(source, privateCache)\r\n                )\r\n                ||\r\n                (\r\n                    isHTMLElement(source)\r\n                    &&\r\n                    ('currentSrc' in source && source.currentSrc.length > 0)\r\n                    &&\r\n                    (\r\n                        ('complete' in source && source.complete)\r\n                        ||\r\n                        ('readyState' in source && source.readyState >= 2)\r\n                    )\r\n                )\r\n            );\r\n        },\r\n        /**\r\n         * @param {string|HTMLElement} source\r\n         * @returns {boolean}\r\n         */\r\n        isBroken = source => {\r\n            return (\r\n                isLoaded(source)\r\n                &&\r\n                (\r\n                    (\r\n                        isHTMLElement(source)\r\n                        &&\r\n                        (\r\n                            ('naturalWidth' in source && Math.floor(source.naturalWidth) === 0)\r\n                            ||\r\n                            ('videoWidth' in source && source.videoWidth === 0)\r\n                        )\r\n                    )\r\n                    ||\r\n                    typeof source === 'string'\r\n                )\r\n            );\r\n        },\r\n        /**\r\n         * @param {Object} resource\r\n         * @returns {Object}\r\n         */\r\n        decodeResource = resource => {\r\n\r\n            let\r\n                output = {\r\n                    format: null,\r\n                    extension: null,\r\n                    tag: null,\r\n                    consistent: false // true if tag match the resource type\r\n                },\r\n                breakLoop = false;\r\n\r\n            resource.resource = resource.resource.split('?')[0];\r\n            resource.resource = resource.resource.split('#')[0];\r\n            Object.keys(supportedExtensions).forEach(formatCandidate => {\r\n\r\n                if (breakLoop) {\r\n                    return;\r\n                }\r\n\r\n                const base64Heading = '\\;base64\\,';\r\n\r\n                if (new RegExp('(\\.(' + supportedExtensions[formatCandidate] + ')$)|' + base64Heading, 'g').test(resource.resource)) {\r\n\r\n                    if (new RegExp(base64Heading, 'g').test(resource.resource)) {\r\n\r\n                        let matches64 = resource.resource.match(new RegExp('^data:' + formatCandidate + '\\/(' + supportedExtensions[formatCandidate] + ')', 'g'));\r\n\r\n                        if (null === matches64) {\r\n                            return;\r\n                        }\r\n\r\n                        matches64 = matches64[0];\r\n\r\n                        output.format = formatCandidate;\r\n                        output.extension = matches64.replace('data:' + formatCandidate + '/', '');\r\n                        output.tag = supportedTags[formatCandidate];\r\n\r\n                        breakLoop = true;\r\n\r\n                    } else {\r\n\r\n                        let matches = resource.resource.match(new RegExp(supportedExtensions[formatCandidate], 'g'));\r\n\r\n                        if (matches) {\r\n\r\n                            output.format = formatCandidate;\r\n                            output.extension = matches[0];\r\n                            output.tag = supportedTags[formatCandidate];\r\n\r\n                            breakLoop = true;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            });\r\n\r\n            if (isHTMLElement(resource.element)) {\r\n\r\n                let\r\n                    tagName = resource.element.tagName.toLowerCase(),\r\n                    allTags = '';\r\n\r\n                Object.values(supportedTags).forEach(tags => {\r\n                    allTags += '|' + tags;\r\n                });\r\n\r\n                allTags = allTags.split('|');\r\n\r\n                if (isInArray(tagName, allTags)) {\r\n                    output.tag = tagName;\r\n                    output.consistent = true;\r\n                    if (output.format === null) {\r\n                        Object.keys(supportedTags).forEach(format => {\r\n                            if (stringContains(supportedTags[format], output.tag)) {\r\n                                output.format = format;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            if (stringContains(output.tag, '|')) {\r\n                output.tag = output.tag.split('|')[0];\r\n            }\r\n\r\n            return output;\r\n\r\n        };\r\n\r\n    let\r\n        privateEventsStorage = {},\r\n        privateCache = [];\r\n\r\n    // TODO: Promise support\r\n    // TODO: think about useful vars in callback args (this class is not public but its vars are returned in .progress() callback)\r\n    /** TODO: description of the MyClass constructor function.\r\n     * @class\r\n     * @classdesc TODO: description of the SingleLoader class.\r\n     */\r\n    class SingleLoader {\r\n\r\n        /**\r\n         * @param {Object} options\r\n         */\r\n        constructor(options) {\r\n\r\n            this._settings = {\r\n                ...{\r\n                    srcAttr: 'data-src',\r\n                    srcsetAttr: 'data-srcset',\r\n                    playthrough: false,\r\n                    visible: false,\r\n                }, ...options\r\n            };\r\n\r\n            this.srcAttr = '';\r\n            this.srcsetAttr = '';\r\n\r\n            if (!stringStartsWith(this._settings.srcAttr, 'data-')) {\r\n                this.srcAttr = this._settings.srcAttr;\r\n                this._settings.srcAttr = 'data-' + this._settings.srcAttr;\r\n            } else {\r\n                this.srcAttr = this._settings.srcAttr.replace('data-', '');\r\n            }\r\n\r\n            if (!stringStartsWith(this._settings.srcsetAttr, 'data-')) {\r\n                this.srcsetAttr = this._settings.srcsetAttr;\r\n                this._settings.srcsetAttr = 'data-' + this._settings.srcsetAttr;\r\n            } else {\r\n                this.srcsetAttr = this._settings.srcsetAttr.replace('data-', '');\r\n            }\r\n\r\n            this.srcAttr = hyphensToCamelCase(this.srcAttr);\r\n            this.srcsetAttr = hyphensToCamelCase(this.srcsetAttr);\r\n\r\n            this._id = null;\r\n            this._idEvent = null;\r\n            this._busy = false;\r\n\r\n            this._element = null;\r\n            this._resource = null;\r\n            this._format = null;\r\n            this._observer = null;\r\n\r\n            this._done = () => { };\r\n            this._success = () => { };\r\n            this._error = () => { };\r\n\r\n            this._callback = (e) => {\r\n\r\n                this._busy = false;\r\n                if( null !== this._observer ){\r\n                    this._observer.unobserve(this._element);\r\n                }\r\n\r\n                const src = this._element.currentSrc || this._element.src;\r\n\r\n                if (!isInArray(src, privateCache)) {\r\n                    privateCache.push(src);\r\n                }\r\n\r\n                let thisArguments = [this._element, e.type, src, this._id];\r\n\r\n                this[e.type !== 'error' ? '_success' : '_error'].apply(this, thisArguments);\r\n                this._done.apply(this, thisArguments);\r\n\r\n            };\r\n\r\n        }\r\n\r\n        /**\r\n         * @param {Object} data\r\n         */\r\n        set resource(data) {\r\n\r\n            if (typeof data === 'object' && 'id' in data && 'element' in data && 'resource' in data) {\r\n\r\n                this._id = data.id;\r\n                this._element = data.element;\r\n                this._resource = data.resource;\r\n\r\n                let info = decodeResource({ resource: this._resource, element: this._element });\r\n                this._tag = info.tag;\r\n                this._consistent = info.consistent;\r\n                this._format = info.format;\r\n                this._exists = this._element !== null;\r\n                this._originalElement = this._element;\r\n\r\n                if ( !this._exists || !this._consistent ) {\r\n                    this._element = document.createElement(this._tag);\r\n                    this._element.dataset[this.srcAttr] = this._resource;\r\n                }\r\n                \r\n                if( this._exists && this._settings.visible && IntersectionObserverSupported ){\r\n                    this._observer = new IntersectionObserver((entries, observer) => {\r\n                        entries.forEach(entry => entry.target.intersectionRatio = entry.intersectionRatio);\r\n                    }, {\r\n                        root: null,\r\n                        rootMargin: '0px',\r\n                        threshold: 0.1\r\n                    });\r\n                    this._observer.observe(this._originalElement);\r\n                }\r\n\r\n                this._idEvent = this._element[pluginInstance + '_IDEvent'];\r\n                this._busy = this._idEvent !== undefined;\r\n                this._idEvent = this._busy ? this._idEvent : pluginName + '_unique_' + this._element.tagName + '_' + generateInstanceID();\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * @returns {string} \r\n         */\r\n        get resource() {\r\n            return this._resource;\r\n        }\r\n\r\n        /**\r\n         * @returns {boolean} se ha preso in carico il caricamento oppure no per vari motivi (è già caricato, non è nella viewport etc)\r\n         */\r\n        load() {\r\n\r\n            if (isLoaded(this._exists && this._consistent ? this._element : this._resource)) {\r\n\r\n                if (!this._busy) {\r\n                    // TODO: mayabe this should be called in this._callback\r\n                    detachEventListener(this._element, '.' + this._idEvent);\r\n                }\r\n\r\n                this._callback(new CustomEvent(!isBroken(this._exists && this._consistent ? this._element : this._resource) ? 'load' : 'error'));\r\n\r\n                return false;\r\n\r\n            } else if (this._exists && this._settings.visible && !isVisible(this._originalElement)) {\r\n\r\n                return false;\r\n\r\n            } else {\r\n\r\n                if (this._format === 'image') {\r\n\r\n                    attachEventListener(this._element, 'load.' + this._idEvent, this._callback, !this._busy);\r\n                    attachEventListener(this._element, 'error.' + this._idEvent, this._callback, !this._busy);\r\n\r\n                    const picture = this._element.closest('picture');\r\n\r\n                    if (picture && pictureElementSupported) {\r\n\r\n                        delete this._element.dataset[this.srcsetAttr];\r\n                        delete this._element.dataset[this.srcAttr];\r\n\r\n                        picture.querySelectorAll('source[' + this._settings.srcsetAttr + ']').forEach((el) => {\r\n                            el.setAttribute('srcset', el.dataset[this.srcAttr]);\r\n                            delete el.dataset[this.srcAttr];\r\n                        });\r\n\r\n                    } else {\r\n\r\n                        if (this._element.matches('[' + this._settings.srcsetAttr + ']')) {\r\n                            this._element.setAttribute('srcset', this._element.dataset[this.srcsetAttr]);\r\n                            delete this._element.dataset[this.srcsetAttr];\r\n                        }\r\n\r\n                        if (this._element.matches('[' + this._settings.srcAttr + ']')) {\r\n                            this._element.setAttribute('src', this._element.dataset[this.srcAttr]);\r\n                            delete this._element.dataset[this.srcAttr];\r\n                        }\r\n\r\n                    }\r\n\r\n                } else if (this._format === 'video' || this._format === 'audio') {\r\n\r\n                    const\r\n                        isPlaythroughModeNormal = true === this._settings.playthrough,\r\n                        isPlaythroughModeFull = 'full' === this._settings.playthrough,\r\n                        sources = this._element.querySelectorAll('source'),\r\n                        isFullyBuffered = function (media) {\r\n                            return media.buffered.length && Math.round(media.buffered.end(0)) / Math.round(media.seekable.end(0)) === 1;\r\n                        };\r\n\r\n                    let callMediaLoad = false;\r\n\r\n                    if (sources) {\r\n\r\n                        sources.forEach((source) => {\r\n\r\n                            if (source.matches('[' + this._settings.srcAttr + ']')) {\r\n\r\n                                source.setAttribute('src', source.dataset[this.srcAttr]);\r\n                                delete source.dataset[this.srcsetAttr];\r\n\r\n                                callMediaLoad = true;\r\n\r\n                            }\r\n\r\n                            attachEventListener(source, 'error.' + this._idEvent, (e) => {\r\n\r\n                                const sourcesErrorId = pluginName + '_error';\r\n\r\n                                source[pluginInstance + '_' + sourcesErrorId] = true;\r\n\r\n                                if (sources.length === nodelistToArray(sources).filter(thisSource => true === thisSource[pluginInstance + '_' + sourcesErrorId]).length) {\r\n                                    this._callback(e);\r\n                                }\r\n\r\n                            }, !this._busy);\r\n\r\n                        });\r\n\r\n                    } else if (this._element.matches('[' + this._settings.srcAttr + ']')) {\r\n\r\n                        this._element.setAttribute('src', this._element.dataset[this.srcAttr]);\r\n                        delete this._element.dataset[this.srcAttr];\r\n\r\n                        attachEventListener(this._element, 'error.' + this._idEvent, this._callback, !this._busy);\r\n\r\n                        callMediaLoad = true;\r\n\r\n                    }\r\n\r\n                    if (callMediaLoad) {\r\n                        this._element.load();\r\n                    }\r\n\r\n                    attachEventListener(this._element, 'loadedmetadata.' + this._idEvent, () => {\r\n\r\n                        if (!isPlaythroughModeNormal && !isPlaythroughModeFull) {\r\n                            this._callback(new CustomEvent('load'));\r\n                        }\r\n\r\n                        if (isPlaythroughModeFull) {\r\n\r\n                            let onProgressReplacementInterval = setInterval(() => {\r\n\r\n                                let isError = this._element.readyState > 0 && !this._element.duration;\r\n\r\n                                if (isError || isFullyBuffered(this._element)) {\r\n\r\n                                    this._element.currentTime = 0;\r\n\r\n                                    if (!isError && !this._busy && this._element.paused && this._element.matches('[autoplay]')) {\r\n                                        this._element.play();\r\n                                    }\r\n\r\n                                    clearInterval(onProgressReplacementInterval);\r\n\r\n                                    this._callback(new CustomEvent(!isError ? 'load' : 'error'));\r\n\r\n                                } else {\r\n\r\n                                    if (!this._element.paused) {\r\n                                        this._element.pause();\r\n                                    }\r\n\r\n                                    if (!this._busy) {\r\n                                        this._element.currentTime += 2;\r\n                                    }\r\n\r\n                                }\r\n\r\n                            }, 500);\r\n\r\n                            this._element[pluginName + '_' + this._idEvent] = onProgressReplacementInterval;\r\n\r\n                        }\r\n\r\n                    }, !this._busy);\r\n\r\n                    attachEventListener(this._element, 'canplay.' + this._idEvent, () => {\r\n                        if (isPlaythroughModeFull && this._element.currentTime === 0 && !isFullyBuffered(this._element)) {\r\n                            this._element.currentTime++;\r\n                        }\r\n                    }, !this._busy);\r\n\r\n                    attachEventListener(this._element, 'canplaythrough.' + this._idEvent, () => {\r\n                        if (isPlaythroughModeNormal) {\r\n                            this._callback(new CustomEvent('load'));\r\n                        }\r\n                    }, !this._busy);\r\n\r\n                } else {\r\n\r\n                    return false;\r\n\r\n                }\r\n\r\n                if (!this._busy) {\r\n                    this._element[pluginInstance + '_IDEvent'] = this._idEvent;\r\n                }\r\n\r\n            }\r\n\r\n            this._resource = this._element.currentSrc || this._element.src;\r\n\r\n            return !this._busy;\r\n\r\n        }\r\n\r\n        /**\r\n         * @param {Function} callback\r\n         * @returns {undefined}\r\n         */\r\n        done(callback) {\r\n\r\n            if (typeof callback !== 'function') {\r\n                return;\r\n            }\r\n\r\n            this._done = function (element, status, resource, id) {\r\n                callback.apply(this, [element, status, resource, id]);\r\n            };\r\n\r\n        };\r\n\r\n        /**\r\n         * @returns {undefined}\r\n         */\r\n        abort() {\r\n\r\n            detachEventListener(this._element, '.' + this._idEvent);\r\n\r\n            if (isLoaded(this._exists ? this._element : this._resource)) {\r\n                return;\r\n            }\r\n\r\n            const\r\n                src = this._element.getAttribute('srcset'),\r\n                srcset = this._element.getAttribute('src');\r\n\r\n            if (undefined !== src) {\r\n                this._element.dataset[this.srcAttr] = src;\r\n                this._element.setAttribute(this._settings.srcAttr, src);\r\n                this._element.removeAttribute('src');\r\n                this._element.removeAttribute('srcset');\r\n            }\r\n\r\n            if (undefined !== srcset) {\r\n                this._element.dataset[this.srcsetAttr] = srcset;\r\n                this._element.setAttribute(this._settings.srcsetAttr, srcset);\r\n                this._element.removeAttribute('src');\r\n                this._element.removeAttribute('srcset');\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // TODO: Promise support\r\n    // TODO: private vars\r\n    // TODO: refactory succes/done/progress code...\r\n    /** TODO: description of the MyClass constructor function.\r\n     * @class\r\n     * @classdesc TODO: description of the Loader class.\r\n     */\r\n    class Loader {\r\n\r\n        /**\r\n         * @param {Object} options\r\n         */\r\n        constructor(options) {\r\n\r\n            this._collection = [];\r\n            this._collectionLoaded = [];\r\n            this._collectionInstances = [];\r\n            this._collectionPending = [];\r\n            this._resourcesLoaded = [];\r\n\r\n            this._settings = {\r\n                ...{\r\n                    srcAttr: 'data-src',\r\n                    srcsetAttr: 'data-srcset',\r\n                    playthrough: false,\r\n                    visible: false,\r\n                    backgrounds: false,\r\n                    attributes: []\r\n                }, ...options\r\n            };\r\n\r\n            this.srcAttr = '';\r\n            this.srcsetAttr = '';\r\n            if (!stringStartsWith(this._settings.srcAttr, 'data-')) {\r\n                this.srcAttr = this._settings.srcAttr;\r\n                this._settings.srcAttr = 'data-' + this._settings.srcAttr;\r\n            } else {\r\n                this.srcAttr = this._settings.srcAttr.replace('data-', '');\r\n            }\r\n            if (!stringStartsWith(this._settings.srcsetAttr, 'data-')) {\r\n                this.srcsetAttr = this._settings.srcsetAttr;\r\n                this._settings.srcsetAttr = 'data-' + this._settings.srcsetAttr;\r\n            } else {\r\n                this.srcsetAttr = this._settings.srcsetAttr.replace('data-', '');\r\n            }\r\n\r\n            if (typeof this._settings.attributes === 'string') {\r\n                this._settings.attributes = this._settings.attributes.split(this._settings.attributes.contains(',') ? ',' : ' ');\r\n            }\r\n            if (!Array.isArray(this._settings.attributes)) {\r\n                this._settings.attributes = [];\r\n            }\r\n\r\n            this.srcAttr = hyphensToCamelCase(this.srcAttr);\r\n            this.srcsetAttr = hyphensToCamelCase(this.srcsetAttr);\r\n\r\n            this.percentage = 0;\r\n\r\n            this._done = () => { };\r\n            this._progress = () => { };\r\n            this._success = () => { };\r\n            this._error = () => { };\r\n            this._loop = this.load;\r\n\r\n            this._abort = false;\r\n            this._loaded = 0;\r\n            this._complete = false;\r\n            this._busy = false;\r\n\r\n        }\r\n\r\n        /**\r\n         * @param {Array|HTMLElement} collection\r\n         */ // TODO: Nodelist / Array of HTMLElement check maybe?\r\n        set collection(collection) {\r\n\r\n            let collectedResources = [];\r\n\r\n            if( isHTMLElement(collection) || collection === document ){ // TODO: check collection\r\n                        \r\n                let element = collection;\r\n\r\n                const\r\n                    targets = 'img, video, audio',\r\n                    targetsExtended = targets + ', picture, source',\r\n                    targetsFilter = '[' + this._settings.srcAttr + '], [' + this._settings.srcsetAttr + ']';\r\n\r\n                let targetsTags = nodelistToArray(element.querySelectorAll(targets));\r\n\r\n                if (element.matches(targetsExtended)) {\r\n                    targetsTags.push(element);\r\n                }\r\n\r\n                targetsTags = targetsTags.filter((target) => {\r\n                    let children = nodelistToArray(target.children);\r\n                    children = children.filter(x => x.matches(targetsExtended));\r\n                    children = children.filter(x => x.matches(targetsFilter));\r\n                    return target.matches(targetsFilter) || children.length;\r\n                });\r\n                targetsTags.forEach((target) => {\r\n\r\n                    let targetSource = target;\r\n\r\n                    if (!targetSource.matches(targetsFilter)) {\r\n                        targetSource = targetSource.querySelectorAll(targetsFilter);\r\n                        targetSource = [...targetSource][0];\r\n                    }\r\n\r\n                    collectedResources.push({\r\n                        element: target,\r\n                        resource: targetSource.getAttribute(this._settings.srcAttr) || targetSource.getAttribute(this._settings.srcsetAttr)\r\n                    });\r\n\r\n                });\r\n\r\n                if (true === this._settings.backgrounds) {\r\n\r\n                    let targetsBg = nodelistToArray(element.querySelectorAll('*'));\r\n                    targetsBg.push(element);\r\n                    targetsBg = targetsBg.filter(target => !target.matches(targetsExtended));\r\n                    targetsBg = targetsBg.filter(target => getComputedStyle(target).backgroundImage !== 'none');\r\n                    targetsBg.forEach((target) => {\r\n\r\n                        const url = getComputedStyle(target).backgroundImage.match(/\\((.*?)\\)/);\r\n\r\n                        if (null !== url && url.length >= 2) {\r\n                            collectedResources.push({\r\n                                element: target,\r\n                                resource: url[1].replace(/('|\")/g, '')\r\n                            });\r\n                        }\r\n\r\n                    });\r\n\r\n                }\r\n\r\n                this._settings.attributes.forEach(attr => {\r\n\r\n                    nodelistToArray(element.querySelectorAll('[' + attr + ']:not(' + targetsExtended + ')')).forEach((target) => {\r\n                        collectedResources.push({\r\n                            element: target,\r\n                            resource: target.getAttribute(attr)\r\n                        });\r\n                    });\r\n\r\n                    if (element.matches('[' + attr + ']') && !element.matches(targetsExtended)) {\r\n                        collectedResources.push({\r\n                            element: element,\r\n                            resource: element.getAttribute(attr)\r\n                        });\r\n                    }\r\n\r\n                });\r\n\r\n            }\r\n\r\n            collectedResources.forEach(item => {\r\n\r\n                let element = {\r\n                    resource: '',\r\n                    element: null,\r\n                    id: generateInstanceID()\r\n                };\r\n\r\n                if (typeof item === 'string') {\r\n                    element.resource = item;\r\n                } else if (typeof item === 'object' && 'resource' in item) {\r\n                    element = { ...element, ...item };\r\n                } else {\r\n                    return;\r\n                }\r\n\r\n                this._collection.push(element);\r\n\r\n            });\r\n\r\n        }\r\n\r\n        /**\r\n         * @returns {Array} collection\r\n         */\r\n        get collection() {\r\n            return this._collection;\r\n        }\r\n\r\n        /**\r\n         * @returns {undefined}\r\n         */\r\n        load() {\r\n\r\n            // resets pending elements (sequential opt helper array) every time we loop\r\n            this._collectionPending = [];\r\n\r\n            const sequentialMode = true === this._settings.sequential;\r\n\r\n            for (let i = 0; i < this._collection.length; i++) {\r\n\r\n                if (this._abort) {\r\n                    break;\r\n                }\r\n\r\n                let thisLoadId = this._collection[i].id,\r\n                    thisLoadIndex = arrayFindIndex(this._collectionInstances, x => x.id === thisLoadId),\r\n                    thisLoadInstance = new SingleLoader(this._settings);\r\n\r\n                if (thisLoadIndex === -1) {\r\n                    this._collectionInstances.push({ id: thisLoadId, instance: thisLoadInstance });\r\n                    thisLoadIndex = arrayFindIndex(this._collectionInstances, x => x.id === thisLoadId);\r\n                } else {\r\n                    this._collectionInstances[thisLoadIndex].instance = thisLoadInstance;\r\n                }\r\n\r\n                thisLoadInstance.resource = this._collection[i];\r\n\r\n                thisLoadInstance.done((element, status, resource, id) => {\r\n\r\n                    if (this._complete || this._abort) {\r\n                        return;\r\n                    }\r\n\r\n                    const aProgress = !isInArray(id, this._collectionLoaded);\r\n\r\n                    if (aProgress) {\r\n\r\n                        this._collectionLoaded.push(id);\r\n                        this._busy = false;\r\n\r\n                        this._loaded++;\r\n                        this.percentage = this._loaded / this._collection.length * 100;\r\n                        this.percentage = parseFloat(this.percentage.toFixed(4));\r\n\r\n                        const thisResource = { resource: resource, status: status, element: element };\r\n                        this._resourcesLoaded.push(thisResource);\r\n                        this._progress.call(this, thisResource);\r\n                        this[status !== 'error' ? '_success' : '_error'].call(this, thisResource);\r\n                        // TODO: dispatch event on element maybe?\r\n                        // element.dispatchEvent(new CustomEvent(pluginPrefix + capitalize(status) + '.' + pluginPrefix));\r\n\r\n                    }\r\n\r\n                    if (this._loaded === this._collection.length) {\r\n\r\n                        this._done.call(this, this._resourcesLoaded);\r\n\r\n                        this._complete = true;\r\n\r\n                    } else if (aProgress && sequentialMode && this._collectionPending.length) {\r\n\r\n                        this._collectionPending = this._collectionPending.filter(x => x.id !== id);\r\n\r\n                        if (this._collectionPending.length) {\r\n                            this._busy = this._collectionPending[0].instance.load();\r\n                        }\r\n\r\n                    }\r\n\r\n                });\r\n\r\n                if (!sequentialMode || (sequentialMode && !this._busy)) {\r\n                    this._busy = thisLoadInstance.load();\r\n\r\n                } else if (sequentialMode && this._busy && (!this._settings.visible || !thisLoadInstance._exists || (this._settings.visible && thisLoadInstance._exists && isVisible(thisLoadInstance._originalElement)))) {\r\n                    this._collectionPending.push({ id: thisLoadId, instance: thisLoadInstance });\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /**\r\n         * @param {Function} callback\r\n         * @returns {undefined}\r\n         */\r\n        done(callback) {\r\n\r\n            if (typeof callback !== 'function') {\r\n                return;\r\n            }\r\n\r\n            const _done = function (resources) {\r\n                callback.call(this, resources);\r\n            };\r\n\r\n            if (this._collection.length) {\r\n                this._done = _done;\r\n            } else {\r\n                _done();\r\n            }\r\n\r\n        };\r\n\r\n        /**\r\n         * @param {Function} callback\r\n         * @returns {undefined}\r\n         */\r\n        progress(callback) {\r\n\r\n            if (typeof callback !== 'function'){\r\n                return;\r\n            }\r\n\r\n            if (this._collection.length) {\r\n                this._progress = function (resource) {\r\n                    callback.call(this, resource);\r\n                };\r\n            }\r\n\r\n        };\r\n\r\n        /**\r\n         * @param {Function} callback\r\n         * @returns {undefined}\r\n         */\r\n        success(callback) {\r\n\r\n            if (typeof callback !== 'function') {\r\n                return;\r\n            }\r\n\r\n            if (this._collection.length) {\r\n                this._success = function (resource) {\r\n                    callback.call(this, resource);\r\n                };\r\n            }\r\n\r\n        };\r\n\r\n        /**\r\n         * @param {Function} callback\r\n         * @returns {undefined}\r\n         */\r\n        error(callback) {\r\n\r\n            if (typeof callback !== 'function') {\r\n                return;\r\n            }\r\n\r\n            const _func = function (resource) {\r\n                callback.call(this, resource);\r\n            };\r\n\r\n            if (this._collection.length) {\r\n                this._error = _func;\r\n            }\r\n\r\n        };\r\n\r\n        /**\r\n         * @returns {undefined}\r\n         */\r\n        abort() {\r\n\r\n            this._collectionInstances.forEach(thisInstance => {\r\n                thisInstance.instance.abort();\r\n            });\r\n\r\n            if (this._collection.length) {\r\n                this._abort = true;\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    // public interface\r\n    // - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n    // requirejs\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(capitalize(pluginName), Loader);\r\n        // nodejs\r\n    } else if ('object' === typeof exports) {\r\n        module.exports[capitalize(pluginName)] = Loader;\r\n        // vanilla\r\n    } else {\r\n        window[capitalize(pluginName)] = Loader;\r\n    }\r\n    // - - - - - - - - - - - - - - - - - - - - - - - - - - -\r\n\r\n    // jQuery interface\r\n    // - - - - - - - - - - - - - - - - - - - -\r\n    if (!$) {\r\n        return undefined;\r\n    }\r\n\r\n    $[capitalize(pluginName)] = Loader;\r\n\r\n    const\r\n        $document = $(document),\r\n        $window = $(window),\r\n        // thanks https://gist.github.com/beaucharman/e46b8e4d03ef30480d7f4db5a78498ca\r\n        throttle = (callback, wait, context = this) => {\r\n            let timeout = null,\r\n                callbackArgs = null\r\n            const later = () => {\r\n                callback.apply(context, callbackArgs)\r\n                timeout = null\r\n            }\r\n            return function () {\r\n                if (!timeout) {\r\n                    callbackArgs = arguments\r\n                    timeout = setTimeout(later, wait)\r\n                }\r\n            }\r\n        };\r\n\r\n    let methodCollection = [];\r\n\r\n    $.fn[pluginMethod] = function (options) {\r\n\r\n        let originalUserOptions = options;\r\n\r\n        if (typeof options !== 'object') {\r\n            options = {};\r\n        }\r\n\r\n        let settings = {\r\n            ...{\r\n\r\n                srcAttr: 'data-src',\r\n                srcsetAttr: 'data-srcset',\r\n\r\n                visible: false,\r\n\r\n                sequential: false,\r\n\r\n                backgrounds: false,\r\n                extraAttrs: [],\r\n\r\n                playthrough: false,\r\n\r\n                early: false,\r\n                earlyTimeout: 0,\r\n\r\n                onProgress: () => { },\r\n                onLoad: () => { },\r\n                onError: () => { },\r\n\r\n                onComplete: () => { },\r\n\r\n            }, ...options\r\n        };\r\n\r\n        let callback = settings.onComplete;\r\n        if ($.isFunction(originalUserOptions)) {\r\n            callback = originalUserOptions;\r\n        }\r\n\r\n        return this.each(function (i) {\r\n\r\n            // TODO: mutation observer when new children are appended\r\n\r\n            const\r\n                $element = $(this),\r\n                uniqueMethodPluginName = generateInstanceID() + i,\r\n                thisLoadInstance = new Loader(settings);\r\n\r\n            thisLoadInstance.collection = this;\r\n\r\n            methodCollection.push({\r\n                id: uniqueMethodPluginName,\r\n                instance: thisLoadInstance,\r\n                element: this,\r\n                timeout: null\r\n            });\r\n\r\n            thisLoadInstance.progress((resource) => {\r\n\r\n                $(resource.element).trigger(pluginPrefix + capitalize(resource.status) + '.' + pluginPrefix, [resource.element, resource.resource]);\r\n                $element.trigger(pluginPrefix + 'Progress.' + pluginPrefix, [this, resource]);\r\n\r\n                const thisArguments = [thisLoadInstance, resource];\r\n\r\n                if (typeof settings.onProgress === 'function') {\r\n                    settings.onProgress.apply(this, thisArguments);\r\n                }\r\n\r\n                let eventName = capitalize(resource.status);\r\n                if (typeof settings['on' + eventName] === 'function') {\r\n                    settings['on' + eventName].apply(this, thisArguments);\r\n                }\r\n\r\n            });\r\n\r\n            thisLoadInstance.done(resources => {\r\n\r\n                $element.trigger(pluginPrefix + 'Complete.' + pluginPrefix, [this, resources]);\r\n                callback.apply(this, [thisLoadInstance, resources]);\r\n\r\n                if (settings.visible) {\r\n                    /*if (IntersectionObserverSupported) {\r\n                        thisLoadInstance.collection.forEach(item => item.element.intersectionObserver.unobserve(item.element));\r\n\r\n                    } else {*/\r\n                        $window.off('scroll.' + uniqueMethodPluginName);\r\n\r\n                    //}\r\n                }\r\n\r\n                // refresh other method calls for same el (omitting this one)\r\n                methodCollection = methodCollection.filter(x => x.id !== uniqueMethodPluginName);\r\n                methodCollection.forEach(thisMethodCollection => {\r\n                    if ($element.is(thisMethodCollection.element)) {\r\n                        thisMethodCollection.instance.load();\r\n                    }\r\n                });\r\n\r\n            });\r\n\r\n            thisLoadInstance.load();\r\n\r\n            if (settings.visible) {\r\n               /* if (IntersectionObserverSupported) {\r\n\r\n                    thisLoadInstance.collection.forEach(item => {\r\n\r\n                        item.element.intersectionObserver = new IntersectionObserver((entries, observer) => {\r\n                            entries.forEach(entry => {\r\n                                if( entry.intersectionRatio > 0 ){\r\n                                    thisLoadInstance.load();\r\n                                }\r\n                            });\r\n                        }, {\r\n                            root: null,\r\n                            rootMargin: '0px',\r\n                            threshold: 0.0\r\n                        });\r\n\r\n                        item.element.intersectionObserver.observe(item.element);\r\n\r\n                    });\r\n\r\n                } else {*/\r\n\r\n                    $window.on('scroll.' + uniqueMethodPluginName, throttle(() => thisLoadInstance.load(), 250));\r\n\r\n               //}\r\n            }\r\n\r\n            if (true === settings.early) {\r\n\r\n                let breakLoop = false;\r\n\r\n                methodCollection.forEach(thisMethodCollection => {\r\n\r\n                    if (breakLoop) {\r\n                        return;\r\n                    }\r\n\r\n                    if (methodCollection[key].id === uniqueMethodPluginName) {\r\n\r\n                        clearTimeout(thisMethodCollection.timeout);\r\n\r\n                        let timeout = parseInt(settings.earlyTimeout);\r\n\r\n                        thisMethodCollection.timeout = setTimeout(() => {\r\n\r\n                            // TODO: appropriate method to set/update settings?\r\n                            thisMethodCollection.instance._settings.visible = false;\r\n                            thisMethodCollection.instance._settings.sequential = true;\r\n\r\n                            thisMethodCollection.instance.load();\r\n\r\n                        }, !isNaN(timeout) && isFinite(timeout) ? timeout : 0);\r\n\r\n                        breakLoop = true;\r\n\r\n                    }\r\n\r\n                });\r\n\r\n            }\r\n\r\n        });\r\n\r\n    };\r\n\r\n})(window, document, jQuery);"],"file":"nite.loader.min.js"}