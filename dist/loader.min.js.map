{"version":3,"sources":["loader.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_typeof","Symbol","iterator","obj","constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","create","value","setPrototypeOf","__proto__","_fixBabelExtend","O","gPO","getPrototypeOf","o","sPO","p","construct","Reflect","Parent","args","Class","a","push","apply","bind","this","_classCallCheck","instance","_toConsumableArray","arr","Array","isArray","arr2","from","global","factory","exports","module","define","amd","Loader","isInArray","needle","heystack","indexOf","getComputed","element","property","window","getComputedStyle","getPropertyValue","supportedExtensions","image","audio","video","supportedTags","other","allSupportedTags","concat","Set","values","reduce","b","Media","item","isElement","HTMLElement","url","consistent","tagName","toLowerCase","type","extension","format","extensions","join","RegExp","test","matches","match","replace","_format","LoaderPromise","_Promise","fn","_this","resolve","reject","_progress","forEach","listener","error","Promise","handler","find","undefined","document","body","options","settings","srcAttributes","src","lazy","srcset","sizesAttributes","sizes","media","backgrounds","collection","tagsSelector","srcAttributesValues","srcAttributesSelector","map","x","targets","querySelectorAll","filter","el","parentElement","attribute","j","getAttribute","switchAttributes","attrs","keys","attr","dataAttr","dataAttrVal","setAttribute","removeAttribute","copyAttributes","attributes","removeAttributes","_options","playthrough","sequential","_collection","_queue","Map","_load","_percentage","_state","data","dispatchEvent","CustomEvent","_this2","progress","loaded","pipeline","loadStep","cb","load","fetch","then","e","catch","_this3","isConsistent","contains","hasSources","createdElement","createElement","mainEventsTarget","style","visibility","position","top","left","width","height","appendChild","createdSource","append","finishPromise","removeChild","delete","prepareLoad","event","detail","queuer","observer","addEventListener","IntersectionObserver","entries","entry","intersectionRatio","unobserve","root","rootMargin","threshold","observe","set","get","_this4","isMedia","pushCheck","console","warn"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('Loader', factory) :\n    (global.Loader = factory());\n}(this, (function () { 'use strict';\n\n    /**\n     * @param {string} prop\n     * @param {string} value\n     * @returns {boolean}\n     */\n\n    /**\n     * @param {String|number} needle\n     * @param {Array} heystack\n     * @returns {boolean}\n     */\n    const isInArray = (needle, heystack) => {\n        return heystack.indexOf(needle) > -1;\n    };\n\n    // TODO: cache?\n    /**\n     *\n     * @param {HTMLElement} element\n     * @param {string} property\n     * @returns {string}\n     */\n    const getComputed = (element, property) => window.getComputedStyle(element).getPropertyValue(property);\n\n    const supportedExtensions = {\n        image: ['jp[e]?g', 'jpe', 'jif', 'jfif', 'jfi', 'gif', 'png', 'tif[f]?', 'bmp', 'dib', 'webp', 'ico', 'cur', 'svg'],\n        audio: ['mp3', 'ogg', 'oga', 'spx', 'ogg', 'wav'],\n        video: ['mp4', 'ogg', 'ogv', 'webm']\n    };\n    const supportedTags = {\n        image: ['img', 'picture'],\n        audio: ['audio'],\n        video: ['video'],\n        other: ['iframe'] // TODO: ...\n    };\n    const allSupportedTags = [...new Set(Object.values(supportedTags).reduce((a, b) => a.concat(b)))];\n\n    /**\n     * @param {Object} item\n     * @returns {Object}\n     */\n    class Media {\n        constructor(item) {\n            const isElement = item.element instanceof HTMLElement;\n\n            this.url = item.url;\n            this.consistent = isElement && isInArray(item.element.tagName.toLowerCase(), allSupportedTags);\n            this.element = isElement ? item.element : null;\n            this.tagName = this.consistent ? this.element.tagName.toLowerCase() : null;\n            this.type = null;\n            this.extension = null;\n\n            if (!this.url) {\n                return;\n            }\n\n            this.url = item.url;\n\n            for (let format in supportedExtensions) {\n                const extensions = supportedExtensions[format].join('|');\n\n                if (new RegExp('(.(' + extensions + ')$)|data:' + format + '/(' + extensions + ');base64,').test(this.url)) {\n                    const matches = this.url.match(new RegExp('.(' + extensions + ')$', 'g')) || this.url.match(new RegExp('^data:' + format + '/(' + extensions + ')', 'g'));\n\n                    if (null !== matches) {\n                        this.type = format;\n                        this.extension = matches[0].replace('data:' + format + '/', '').replace('.', '');\n                        this.tagName = this.tagName ? this.tagName : supportedTags[format][0];\n\n                        break;\n                    }\n                }\n            }\n\n            if (this.consistent && (this.tagName === 'audio' || this.tagName === 'video' || this.tagName === 'iframe')) {\n                this.type = this.tagName;\n            } else if (this.tagName) {\n                for (let format in supportedTags) {\n                    if (isInArray(this.tagName, supportedTags[format])) {\n                        this.type = format;\n                        break;\n                    }\n                }\n            }\n        }\n\n        static isMedia(item) {\n            return typeof item === 'object' && 'tagName' in item && 'type' in item && 'url' in item && 'extension' in item && 'element' in item;\n        }\n    }\n\n    /**\n     *\n     */\n    class LoaderPromise extends Promise {\n        constructor(fn) {\n            super((resolve, reject) => {\n                fn(resolve, reject, value => {\n                    try {\n                        return this._progress.forEach(listener => listener(value));\n                    } catch (error) {\n                        reject(error);\n                    }\n                });\n            });\n\n            this._progress = [];\n        }\n\n        progress(handler) {\n            if (typeof handler === 'function') {\n                this._progress.push(handler);\n            }\n\n            return this;\n        }\n    }\n\n    /**\n     *\n     * @param {HTMLElement} [element=document.body]\n     * @param {Object} [options={ srcAttr: 'src', srcsetAttr: 'srcset', backgrounds: false }]\n     * @returns {Array}\n     */\n    const find = (element = document.body, options = {}) => {\n        let settings = {\n            ...{\n                srcAttributes: {\n                    src: !!!options.lazy ? 'src' : 'data-src',\n                    srcset: !!!options.lazy ? 'srcset' : 'data-srcset'\n                },\n                sizesAttributes: {\n                    sizes: !!!options.lazy ? 'sizes' : 'data-sizes',\n                    media: !!!options.lazy ? 'media' : 'data-media'\n                },\n                backgrounds: false\n            },\n            ...options\n        };\n\n        let collection = [];\n\n        const tagsSelector = allSupportedTags.join(',');\n        const srcAttributesValues = Object.values(settings.srcAttributes);\n        const srcAttributesSelector = srcAttributesValues.map(x => '[' + x + ']').join(',');\n\n        let targets = [...element.querySelectorAll(tagsSelector)].filter(el => !el.parentElement || el.parentElement.tagName.toLowerCase() !== 'picture');\n        if (element.matches(tagsSelector) && (!element.parentElement || element.parentElement.tagName.toLowerCase() !== 'picture')) {\n            targets.push(element);\n        }\n\n        targets.forEach(target => {\n            let source = target;\n\n            if (target.querySelectorAll('source').length) {\n                source = target.querySelectorAll('source');\n                source = [...source][0];\n            }\n\n            if (source.matches(srcAttributesSelector)) {\n                let attribute = '';\n\n                for (let i = 0, j = srcAttributesValues.length; i < j; i++) {\n                    attribute = source.getAttribute(srcAttributesValues[i]);\n                    if (attribute) {\n                        break;\n                    }\n                }\n\n                collection.push(\n                    new Media({\n                        element: target,\n                        url: attribute\n                    })\n                );\n            }\n        });\n\n        if (true === settings.backgrounds) {\n            targets = [...element.querySelectorAll('*')];\n            targets.push(element);\n            targets = targets.filter(target => !target.matches(tagsSelector));\n            targets = targets.filter(target => getComputed(target, 'background-image') !== 'none');\n            targets.forEach(target => {\n                const url = getComputed(target, 'background-image').match(/\\((.*?)\\)/);\n\n                if (null !== url && url.length >= 2) {\n                    collection.push(\n                        new Media({\n                            element: target,\n                            url: url[1].replace(/('|\")/g, '')\n                        })\n                    );\n                }\n            });\n        }\n\n        return collection;\n    };\n\n    /**\n     *\n     * @param {HTMLElement} el\n     * @param {Object} attrs\n     * @returns {void}\n     */\n    const switchAttributes = (el, attrs) => {\n        Object.keys(attrs).forEach(attr => {\n            let dataAttr = attrs[attr];\n            dataAttr = dataAttr === 'src' || dataAttr === 'srcset' ? 'data-' + dataAttr : dataAttr; // TODO: refactory\n            const dataAttrVal = el.getAttribute(dataAttr);\n\n            if (dataAttrVal) {\n                el.setAttribute(attr, dataAttrVal);\n                el.removeAttribute(dataAttr);\n            }\n        });\n    };\n\n    /**\n     *\n     * @param {HTMLElement} el\n     * @param {HTMLElement} attributes\n     * @returns {void}\n     */\n    const copyAttributes = (el, target, attributes) =>\n        attributes.forEach(attr => {\n            const attribute = target.getAttribute(attr);\n            if (attribute) {\n                el.setAttribute(attr === 'src' || attr === 'srcset' ? 'data-' + attr : attr, attribute); // TODO: refactory\n            }\n        });\n\n    /**\n     *\n     * @param {HTMLElement} el\n     * @param {Array} attributes\n     * @returns {void}\n     */\n    const removeAttributes = (el, attributes) => attributes.forEach(attr => el.removeAttribute(attr));\n\n    /**\n     *\n     *\n     */\n    class Loader {\n        constructor(options = {}) {\n            this._options = {\n                ...{\n                    srcAttributes: {\n                        src: !!!options.lazy ? 'src' : 'data-src',\n                        srcset: !!!options.lazy ? 'srcset' : 'data-srcset'\n                    },\n                    sizesAttributes: {\n                        sizes: !!!options.lazy ? 'sizes' : 'data-sizes',\n                        media: !!!options.lazy ? 'media' : 'data-media'\n                    },\n                    lazy: false,\n                    playthrough: false,\n                    backgrounds: true,\n                    sequential: false\n                },\n                ...options\n            };\n\n            this._collection = []; // resources (array of type Media)\n            this._queue = new Map(); // loading resources\n\n            this._load = null; // main load Promise\n\n            this._percentage = 0; // loading percentage\n            this._state = 0; // 0: inactive - 1: busy\n        }\n\n        /**\n         * @returns {Number} percentage\n         */\n        get percentage() {\n            return this._percentage;\n        }\n\n        /**\n         * @param {(Array|HTMLElement)} collection\n         */\n        set collection(collection) {\n            if (this._state === 0) {\n                if (collection instanceof HTMLElement) {\n                    collection = find(collection, this._options);\n                }\n\n                if (typeof item === 'string') {\n                    collection = [new Media({ url: item })];\n                }\n\n                if (Media.isMedia(collection)) {\n                    collection = [collection];\n                }\n\n                if (Array.isArray(collection)) {\n                    collection.forEach(item => {\n                        const pushCheck = media => {\n                            if (media.type === 'image' || media.type === 'video' || media.type === 'audio' || (media.type === 'iframe' && media.consistent)) {\n                                this._collection.push(media);\n\n                                return;\n                            }\n\n                            console.warn(\"Couldn't add media to collection\", media);\n                        };\n\n                        if (item instanceof HTMLElement) {\n                            find(item, this._options).forEach(media => pushCheck(new Media(media)));\n                        }\n\n                        if (typeof item === 'string') {\n                            pushCheck(new Media({ url: item }));\n                        }\n\n                        if (Media.isMedia(item)) {\n                            pushCheck(item);\n                        }\n                    });\n                }\n            }\n        }\n\n        /**\n         *\n         * @returns {Array} collection\n         */\n        get collection() {\n            return this._collection;\n        }\n\n        /**\n         *\n         * @returns {void}\n         */\n        abort() {\n            if (this._state === 0) {\n                return;\n            }\n\n            this._state = 0;\n\n            this._queue.forEach((data, element) => element.dispatchEvent(new CustomEvent('Aborted')));\n        }\n\n        /**\n         *\n         * @returns {Promise}\n         */\n        load() {\n            this._load = new LoaderPromise((resolve, reject, progress) => {\n                if (this._state === 1) {\n                    reject('A Loader instance is already in progress.');\n                }\n                if (!this._collection.length) {\n                    reject('Collection is empty.');\n                }\n\n                this._state = 1;\n\n                if (this._options.sequential) {\n                    let loaded = 0;\n                    const pipeline = () => {\n                        if (this._state === 0) {\n                            reject('Aborted');\n\n                            return;\n                        }\n\n                        const loadStep = (media, cb) => {\n                            loaded++;\n\n                            this._percentage = (loaded / this._collection.length) * 100;\n\n                            progress(media);\n\n                            if (loaded < this._collection.length) {\n                                pipeline();\n\n                                return;\n                            }\n\n                            this._state = 0;\n\n                            cb();\n                        };\n\n                        const load = this.fetch(this._collection[loaded]);\n                        load.then(e => loadStep(e, () => resolve({}))); // TODO: returned something\n                        load.catch(e => loadStep(e, () => reject('Error')));\n                    };\n\n                    pipeline();\n                } else {\n                    let loaded = 0;\n                    const loadStep = (e, cb) => {\n                        loaded++;\n\n                        this._percentage = (loaded / this._collection.length) * 100;\n\n                        progress(e);\n\n                        if (loaded >= this._collection.length) {\n                            this._state = 0;\n\n                            cb();\n                        }\n                    };\n\n                    for (let i = 0; i < this._collection.length; i++) {\n                        if (this._state === 0) {\n                            reject('Aborted');\n\n                            break;\n                        }\n\n                        const load = this.fetch(this._collection[i]);\n                        load.then(e => loadStep(e, () => resolve({}))); // TODO: returned something\n                        load.catch(e => loadStep(e, () => reject(e)));\n                    }\n                }\n            });\n\n            return this._load;\n        }\n\n        /**\n         *\n         * @param {Media} resource\n         * @returns {Promise}\n         */\n        fetch(media) {\n            return new Promise((resolve, reject) => {\n                const isConsistent = media.consistent && document.body.contains(media.element);\n                const hasSources = isConsistent && media.element.querySelectorAll('source').length;\n                const createdElement = document.createElement(media.tagName);\n\n                let mainEventsTarget = createdElement;\n\n                if (media.type === 'iframe') {\n                    createdElement.style.visibility = 'hidden';\n                    createdElement.style.position = 'fixed';\n                    createdElement.style.top = '-999px';\n                    createdElement.style.left = '-999px';\n                    createdElement.style.width = '1px';\n                    createdElement.style.height = '1px';\n                    document.body.appendChild(createdElement);\n                }\n\n                if (isConsistent) {\n                    copyAttributes(createdElement, media.element, Object.values(this._options.srcAttributes));\n                    copyAttributes(createdElement, media.element, Object.values(this._options.sizesAttributes));\n\n                    if (hasSources) {\n                        [...media.element.querySelectorAll('source')].forEach(source => {\n                            const createdSource = document.createElement('source');\n                            copyAttributes(createdSource, source, Object.values(this._options.srcAttributes));\n                            copyAttributes(createdSource, source, Object.values(this._options.sizesAttributes));\n                            createdElement.append(createdSource);\n                        });\n                    }\n\n                    if (media.tagName === 'picture') {\n                        // picture element loads only with a fallback img in it...\n                        mainEventsTarget = document.createElement('img');\n                        createdElement.append(mainEventsTarget);\n                    }\n                }\n\n                const finishPromise = cb => {\n                    if (isConsistent) {\n                        switchAttributes(media.element, this._options.srcAttributes);\n                        switchAttributes(media.element, this._options.sizesAttributes);\n\n                        if (hasSources) {\n                            [...media.element.querySelectorAll('source')].forEach(source => {\n                                switchAttributes(source, this._options.srcAttributes);\n                                switchAttributes(source, this._options.sizesAttributes);\n                            });\n                        }\n\n                        if (media.type === 'video' || media.type === 'audio') {\n                            media.element.load();\n                        }\n\n                        if (media.type === 'iframe') {\n                            createdElement.parentElement.removeChild(createdElement);\n                        }\n                    }\n\n                    this._queue.delete(createdElement);\n\n                    cb(media);\n                };\n\n                const prepareLoad = () => {\n                    if (isConsistent) {\n                        switchAttributes(createdElement, this._options.srcAttributes);\n                        switchAttributes(createdElement, this._options.sizesAttributes);\n\n                        if (hasSources) {\n                            [...createdElement.querySelectorAll('source')].forEach(source => {\n                                switchAttributes(source, this._options.srcAttributes);\n                                switchAttributes(source, this._options.sizesAttributes);\n                            });\n                        }\n                    } else {\n                        createdElement.setAttribute('src', media.url);\n                    }\n\n                    if (media.type === 'video' || media.type === 'audio') {\n                        createdElement.load();\n                    }\n                };\n\n                const dispatchEvent = type => {\n                    const event = new CustomEvent(type, { detail: media });\n\n                    if (media.element) {\n                        media.element.dispatchEvent(event);\n                    }\n\n                    document.dispatchEvent(event);\n                };\n\n                let queuer = { media: media, observer: null, element: createdElement };\n\n                // TODO: \"abort\" custom event must be \"private\" . instance?\n                createdElement.addEventListener('abort', () => {\n                    removeAttributes(createdElement, Object.keys(this._options.srcAttributes));\n                    removeAttributes(createdElement, Object.values(this._options.srcAttributes));\n                    removeAttributes(createdElement, Object.keys(this._options.sizesAttributes));\n                    removeAttributes(createdElement, Object.values(this._options.sizesAttributes));\n\n                    if (hasSources) {\n                        [...createdElement.querySelectorAll('source')].forEach(source => {\n                            removeAttributes(source, Object.keys(this._options.srcAttributes));\n                            removeAttributes(source, Object.values(this._options.srcAttributes));\n                            removeAttributes(source, Object.keys(this._options.sizesAttributes));\n                            removeAttributes(source, Object.values(this._options.sizesAttributes));\n                        });\n                    }\n\n                    finishPromise(reject);\n                });\n\n                mainEventsTarget.addEventListener('error', () => {\n                    finishPromise(reject);\n\n                    dispatchEvent('mediaError');\n                });\n\n                if (media.type === 'image' || media.type === 'iframe') {\n                    mainEventsTarget.addEventListener('load', e => {\n                        if (e.target.tagName.toLowerCase() === 'iframe' && !e.target.getAttribute('src')) {\n                            return; // iframes fire load at landing\n                        }\n\n                        finishPromise(resolve);\n\n                        dispatchEvent('mediaLoad');\n                    });\n                }\n\n                if (media.type === 'audio' || media.type === 'video') {\n                    mainEventsTarget.addEventListener(this._options.playthrough ? 'canplaythrough' : 'loadedmetadata', () => {\n                        finishPromise(resolve);\n\n                        dispatchEvent('mediaLoad');\n                    });\n                }\n\n                if (media.element instanceof HTMLElement && this._options.lazy && 'IntersectionObserver' in window) {\n                    queuer.observer = new IntersectionObserver(\n                        (entries, observer) => {\n                            entries.forEach(entry => {\n                                if (entry.intersectionRatio > 0) {\n                                    observer.unobserve(entry.target);\n\n                                    prepareLoad();\n                                }\n                            });\n                        },\n                        {\n                            root: null,\n                            rootMargin: '0px',\n                            threshold: 0.1\n                        }\n                    );\n\n                    queuer.observer.observe(media.element);\n                    this._queue.set(media.element, queuer);\n                } else {\n                    this._queue.set(createdElement, queuer);\n\n                    prepareLoad();\n                }\n            });\n        }\n    }\n\n    return Loader;\n\n})));\n"],"file":"loader.min.js"}