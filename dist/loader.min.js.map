{"version":3,"sources":["loader.mjs"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_typeof","obj","Symbol","iterator","constructor","global","factory","exports","module","define","amd","self","loader","loadAudioVideo","url","tag","Promise","resolve","reject","proxy","document","createElement","onloadedmetadata","onerror","message","source","lineno","colno","error","src","SupportedFileExtensions","IMAGE","AUDIO","VIDEO","SCRIPT","STYLE","parseResource","resource","HTMLElement","element","currentSrc","Error","parseElementResource","string","format","RegExp","concat","test","split","pop","reduce","x","y","extensions","join","match","type","parseStringResource","loaders","image","onload","audio","video","style","textContent","querySelector","appendChild","script","_load","e","then","Loader","resources","arguments","undefined","this","_resources","value","_this"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('loader', factory) :\n    (global = global || self, global.loader = factory());\n}(this, (function () { 'use strict';\n\n    const loadStyle = url =>\n        new Promise((resolve, reject) => {\n            const proxy = document.createElement(\"style\");\n\n            proxy.textContent = '@import \"' + url + '\"';\n\n            // TODO: reject(new Error(\"?\"))\n\n            document.querySelector(\"head\").appendChild(proxy);\n        });\n\n    const loadScript = url =>\n        new Promise((resolve, reject) => {\n            const proxy = document.createElement(\"script\");\n\n            proxy.onload = () => resolve(url);\n            proxy.onerror = (message, source, lineno, colno, error) =>\n                reject(error);\n\n            proxy.src = url;\n\n            document.querySelector(\"head\").appendChild(proxy);\n        });\n\n    const loadImage = url =>\n        new Promise((resolve, reject) => {\n            const proxy = document.createElement(\"img\");\n\n            proxy.onload = () => resolve(url);\n            proxy.onerror = (message, source, lineno, colno, error) =>\n                reject(error);\n\n            proxy.src = url;\n        });\n\n    const loadAudioVideo = (url, tag) =>\n        new Promise((resolve, reject) => {\n            const proxy = document.createElement(tag);\n\n            proxy.onloadedmetadata = () => resolve(url);\n            proxy.onerror = (message, source, lineno, colno, error) =>\n                reject(error);\n\n            proxy.src = url;\n        });\n\n    const loadAudio = url => loadAudioVideo(url, \"audio\");\n    const loadVideo = url => loadAudioVideo(url, \"video\");\n\n    const SupportedFileExtensions = {\n        IMAGE: [\n            \"jp[e]?g\",\n            \"jpe\",\n            \"jif\",\n            \"jfif\",\n            \"jfi\",\n            \"gif\",\n            \"png\",\n            \"tif[f]?\",\n            \"bmp\",\n            \"dib\",\n            \"webp\",\n            \"ico\",\n            \"cur\",\n            \"svg\"\n        ],\n        AUDIO: [\"mp3\", \"ogg\", \"oga\", \"spx\", \"ogg\", \"wav\"],\n        VIDEO: [\"mp4\", \"ogg\", \"ogv\", \"webm\"],\n        SCRIPT: [\"js\", \"mjs\"],\n        STYLE: [\"css\"]\n    };\n\n    const BASE_64_HEAD = \";base64,\";\n\n    const parseStringResource = string => {\n        if (!new RegExp(`${BASE_64_HEAD}`).test(string)) {\n            string = string\n                .split(\",\")\n                .pop() // gets the last\n                .split(\" \")\n                .reduce((x, y) => (x.length > y.length ? x : y)); // gets the longest fragment in order to skip \"x2\", \"\" etc...\n        }\n\n        for (let format in SupportedFileExtensions) {\n            const extensions = SupportedFileExtensions[format].join(\"|\");\n\n            if (\n                new RegExp(\n                    `(.(${extensions})$)|data:${format}/(${extensions})${BASE_64_HEAD}`\n                ).test(string)\n            ) {\n                const matches =\n                    string.match(new RegExp(`.(${extensions})$`, \"g\")) ||\n                    string.match(\n                        new RegExp(`^data:${format}/(${extensions})`, \"g\")\n                    );\n\n                if (null !== matches) {\n                    return {\n                        type: format,\n                        url: string /*,\n                        extension: matches[0]\n                            .replace(`data:${format}/`, \"\")\n                            .replace(\".\", \"\")*/\n                    };\n                }\n            }\n        }\n\n        throw new Error(\"Error while parsing the resource string.\");\n    };\n\n    const parseElementResource = element => {\n        if (\"currentSrc\" in element) {\n            return element.currentSrc;\n        }\n\n        throw new Error(\"Error while parsing the resource element.\");\n    };\n\n    const parseResource = resource => {\n        if (resource instanceof HTMLElement) {\n            resource = parseElementResource(resource);\n        }\n\n        if (typeof resource === \"string\") {\n            resource = parseStringResource(resource);\n        }\n\n        return resource;\n    };\n\n    const loaders = {\n        image: loadImage,\n        audio: loadAudio,\n        video: loadVideo,\n        style: loadStyle,\n        script: loadScript\n    };\n\n    const load = resource =>\n        new Promise((resolve, reject) => {\n            try {\n                resource = parseResource(resource);\n            } catch (e) {\n                reject(e);\n            }\n\n            loaders[resource.type](resource.url)\n                .then(resolve)\n                .catch(reject);\n        });\n\n    /**\n     *\n     */\n    class Loader {\n        constructor(resources = []) {\n            this._resources = resources;\n        }\n\n        /**\n         *\n         */\n        load() {\n            return new Promise((resolve, reject) => {\n                for (var key in this._resources) {\n                    load(this._resources[key])\n                        .then(resolve)\n                        .catch(() => reject(new Error(\"Woa\")));\n                }\n            });\n        }\n    }\n\n    return Loader;\n\n})));\n"],"file":"loader.min.js"}