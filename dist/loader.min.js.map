{"version":3,"sources":["loader.mjs"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_typeof","obj","Symbol","iterator","constructor","global","factory","exports","module","define","amd","self","loader","loadGeneric","url","tag","successMethod","arguments","undefined","errorMethod","parentTarget","Promise","resolve","reject","proxy","document","createElement","message","source","lineno","colno","error","src","appendChild","loadAudioVideo","SupportedFileExtensions","IMAGE","AUDIO","VIDEO","SCRIPT","STYLE","parseResource","resource","HTMLElement","element","currentSrc","Error","parseElementResource","string","format","RegExp","concat","test","split","pop","reduce","x","y","extensions","join","match","type","parseStringResource","loaders","image","audio","video","style","textContent","querySelector","script","appendTarget","_load","e","then","Loader","resources","this","_resources","value","_this"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define('loader', factory) :\n    (global = global || self, global.loader = factory());\n}(this, (function () { 'use strict';\n\n    /**\n     *\n     * @param url\n     */\n    const loadStyle = url =>\n        new Promise((resolve, reject) => {\n            const proxy = document.createElement(\"style\");\n\n            proxy.textContent = '@import \"' + url + '\"';\n\n            // TODO: reject(new Error(\"?\"))\n\n            document.querySelector(\"head\").appendChild(proxy);\n        });\n\n    /**\n     *\n     * @param url\n     * @param tag\n     * @param successMethod\n     * @param errorMethod\n     * @param parentTarget\n     */\n    const loadGeneric = (\n        url,\n        tag,\n        successMethod = \"onload\",\n        errorMethod = \"onerror\",\n        parentTarget\n    ) =>\n        new Promise((resolve, reject) => {\n            const proxy = document.createElement(tag);\n\n            proxy[successMethod] = () => resolve(url);\n            proxy[errorMethod] = (message, source, lineno, colno, error) =>\n                reject(error);\n\n            proxy.src = url;\n\n            if (parentTarget) {\n                parentTarget.appendChild(proxy);\n            }\n        });\n\n    /**\n     *\n     * @param url\n     */\n    const loadScript = url =>\n        loadGeneric(\n            url,\n            \"script\",\n            \"onloaded\",\n            \"onError\",\n            document.querySelector(appendTarget)\n        );\n\n    /**\n     *\n     * @param url\n     */\n    const loadImage = url => loadGeneric(url, \"img\");\n\n    /**\n     *\n     * @param url\n     */\n    const loadAudioVideo = url => loadGeneric(url, \"audio\", \"onloadedmetadata\");\n\n    /**\n     *\n     * @param url\n     */\n    const loadAudio = url => loadAudioVideo(url);\n    /**\n     *\n     * @param url\n     */\n    const loadVideo = url => loadAudioVideo(url);\n\n    const SupportedFileExtensions = {\n        IMAGE: [\n            \"jp[e]?g\",\n            \"jpe\",\n            \"jif\",\n            \"jfif\",\n            \"jfi\",\n            \"gif\",\n            \"png\",\n            \"tif[f]?\",\n            \"bmp\",\n            \"dib\",\n            \"webp\",\n            \"ico\",\n            \"cur\",\n            \"svg\"\n        ],\n        AUDIO: [\"mp3\", \"ogg\", \"oga\", \"spx\", \"ogg\", \"wav\"],\n        VIDEO: [\"mp4\", \"ogg\", \"ogv\", \"webm\"],\n        SCRIPT: [\"js\", \"mjs\"],\n        STYLE: [\"css\"]\n    };\n\n    const BASE_64_HEAD = \";base64,\";\n\n    /**\n     *\n     * @param string\n     */\n    const parseStringResource = string => {\n        if (!new RegExp(`${BASE_64_HEAD}`).test(string)) {\n            string = string\n                .split(\",\")\n                .pop() // gets the last\n                .split(\" \")\n                .reduce((x, y) => (x.length > y.length ? x : y)); // gets the longest fragment in order to skip \"x2\", \"\" etc...\n        }\n\n        for (let format in SupportedFileExtensions) {\n            const extensions = SupportedFileExtensions[format].join(\"|\");\n\n            if (\n                new RegExp(\n                    `(.(${extensions})$)|data:${format}/(${extensions})${BASE_64_HEAD}`\n                ).test(string)\n            ) {\n                const matches =\n                    string.match(new RegExp(`.(${extensions})$`, \"g\")) ||\n                    string.match(\n                        new RegExp(`^data:${format}/(${extensions})`, \"g\")\n                    );\n\n                if (null !== matches) {\n                    return {\n                        type: format,\n                        url: string /*,\n                        extension: matches[0]\n                            .replace(`data:${format}/`, \"\")\n                            .replace(\".\", \"\")*/\n                    };\n                }\n            }\n        }\n\n        throw new Error(\"Error while parsing the resource string.\");\n    };\n\n    /**\n     *\n     * @param element\n     */\n    const parseElementResource = element => {\n        if (\"currentSrc\" in element) {\n            return element.currentSrc;\n        }\n\n        throw new Error(\"Error while parsing the resource element.\");\n    };\n\n    /**\n     *\n     * @param resource\n     */\n    const parseResource = resource => {\n        if (resource instanceof HTMLElement) {\n            resource = parseElementResource(resource);\n        }\n\n        if (typeof resource === \"string\") {\n            resource = parseStringResource(resource);\n        }\n\n        return resource;\n    };\n\n    const loaders = {\n        image: loadImage,\n        audio: loadAudio,\n        video: loadVideo,\n        style: loadStyle,\n        script: loadScript\n    };\n\n    /**\n     *\n     * @param resource\n     */\n    const load = resource =>\n        new Promise((resolve, reject) => {\n            try {\n                resource = parseResource(resource);\n            } catch (e) {\n                reject(e);\n            }\n\n            loaders[resource.type](resource.url)\n                .then(resolve)\n                .catch(reject);\n        });\n\n    /**\n     *\n     */\n    class Loader {\n        constructor(resources = []) {\n            this._resources = resources;\n        }\n\n        /**\n         *\n         */\n        load() {\n            return new Promise((resolve, reject) => {\n                for (var key in this._resources) {\n                    load(this._resources[key])\n                        .then(resolve)\n                        .catch(() => reject(new Error(\"Woa\")));\n                }\n            });\n        }\n    }\n\n    return Loader;\n\n})));\n"],"file":"loader.min.js"}